---
# Install PL/Java extention on Greenplum database

#
- name: Check if the GPDB software is already installed
  stat: path={{ gpdb.base_dir }}/greenplum-db
  register: gpdb_installed

#
- name: Stop if GPDB software is not installed
  fail: msg="Greenplum Database software is not installed!"
  when: gpdb_installed.stat.exists != True

#
- name: Verify that database is up and running
  become_user: gpadmin
  changed_when: False
  shell: ( . {{ gpdb.base_dir }}/greenplum-db/greenplum_path.sh && psql -c "SELECT VERSION()" )
  args:
    executable: /bin/bash
  register: select_version
  when: inventory_hostname in groups['master']
  failed_when: "'(Greenplum Database ' not in select_version.stdout"

#
- set_fact:
    gppkg_install_cmd: "gppkg -i"
    remote_copy_cmd: "gpscp"
    check_pljava_installed: "gppkg -q --all | grep pljava | cut -d - -f 1"
    pljava_package_name: pljava-{{ pljava.prefix_major_version }}{{ pljava.major_version }}.{{ pljava.minor_version }}.{{ pljava.patch_version }}-gp{{ pljava.gpdb_version }}-{{ pljava.os_version }}_{{ pljava.arch_type }}.gppkg
  when: inventory_hostname in groups['master'] and pljava.gpdb_version|int <= 6

#
- set_fact:
    gppkg_install_cmd: "gppkg -a install"
    remote_copy_cmd: "gpsync"
    check_pljava_installed: "gppkg query | grep pljava | awk '{print $1}'"
    pljava_package_name: pljava-{{ pljava.major_version }}.{{ pljava.minor_version }}.{{ pljava.patch_version }}-gp{{ pljava.gpdb_version }}-{{ pljava.os_version }}_{{ pljava.arch_type }}.gppkg
  when: inventory_hostname in groups['master'] and pljava.gpdb_version|int >= 7

#
- set_fact:
    java_home: "/usr/lib/jvm/jre-1.8.0"
  when: ( ansible_distribution == "RedHat" or ansible_distribution == "CentOS" or ansible_distribution == "Rocky" )

#
- set_fact:
    java_home: "/usr/lib/jvm/java-8-openjdk-amd64/jre"
  when: ( ansible_distribution == "Ubuntu" or ansible_distribution == "Debian" )

#
- name: Verify if PL/Java pakcage is installed
  become_user: gpadmin
  shell: ( source {{ gpdb.base_dir }}/greenplum-db/greenplum_path.sh && {{ check_pljava_installed }} )
  args:
    executable: /bin/bash
  ignore_errors: true
  register: pljava_installed
  changed_when: False
  when: inventory_hostname in groups['master']

#
- name: Stop if PL/Java gppkg package is already installed
  fail: msg="PL/Java gppkg package is already installed!"
  when: ( inventory_hostname in groups['master'] and 'pljava' in pljava_installed.stdout )

#
- name: Copy PL/Java gppkg file
  copy: src={{ pljava_package_name }} dest={{ gpdb.gpadmin_home_dir }} mode=0644 owner=gpadmin group=gpadmin
  when: ( inventory_hostname in groups['master'] and 'pljava' not in pljava_installed.stdout )

#
- name: Install PL/Java package
  become_user: gpadmin
  shell: ( . {{ gpdb.base_dir }}/greenplum-db/greenplum_path.sh && {{ gppkg_install_cmd }} {{ gpdb.gpadmin_home_dir }}/{{ pljava_package_name }} )
  args:
    executable: /bin/bash
  when: ( inventory_hostname in groups['master'] and 'pljava' not in pljava_installed.stdout )

#
- name: Set JAVA_HOME
  become_user: root
  lineinfile:
    dest: /etc/environment
    state: present
    regexp: '^JAVA_HOME'
    line: 'JAVA_HOME={{ java_home }}'

#
- name: Replace JAVA_HOME and LD_LIBRARY_PATH to greenplum_path.sh
  lineinfile:
    dest: "/usr/local/greenplum-db/greenplum_path.sh"
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
    state: "{{ item.state }}"
  with_items:
    - { regexp: '^export JAVA_HOME=', line: 'export JAVA_HOME={{ java_home }}', state: present }
    - { regexp: '^export LD_LIBRARY_PATH=', line: 'export LD_LIBRARY_PATH=$GPHOME/lib:$GPHOME/ext/python/lib:$JAVA_HOME/lib/server:$JAVA_HOME/lib/amd64/server:$JAVA_HOME/jre/lib/amd64/server:$JAVA_HOME/jre/lib/amd64/dcevm:$LD_LIBRARY_PATH', state: present }
  when:
    - inventory_hostname in groups['master']

#
- name: The gpscp command copies the file to all hosts specified in the hostfile.
  become_user: gpadmin
  shell: ( . {{ gpdb.base_dir }}/greenplum-db/greenplum_path.sh && {{ remote_copy_cmd }} -f /home/gpadmin/hostfile $GPHOME/greenplum_path.sh =:/usr/local/greenplum-db/ )
  args:
    executable: /bin/bash
  when: inventory_hostname in groups['master']

#
- name: Restart GPDB and apply parameters for PL/Java in greenplum_path.sh
  become_user: gpadmin
  shell: ( . {{ gpdb.base_dir }}/greenplum-db/greenplum_path.sh && gpstop -ra )
  args:
    executable: /bin/bash
  async: 300
  poll: 5
  when: inventory_hostname in groups['master']

#
- name: Verify that database for PL/Java is installed
  become_user: gpadmin
  shell: ( . {{ gpdb.base_dir }}/greenplum-db/greenplum_path.sh && psql -tAc "SELECT 100 FROM pg_database WHERE datname='{{ pljava.database_name }}'" )
  args:
    executable: /bin/bash
  register: pljava_database_installed
  when: inventory_hostname in groups['master']

#
- name: Create database for PL/Java
  become_user: gpadmin
  shell: ( . {{ gpdb.base_dir }}/greenplum-db/greenplum_path.sh && createdb {{ pljava.database_name }} )
  args:
    executable: /bin/bash
  register: pljava_database_created
  when: ( inventory_hostname in groups['master'] and '100' not in pljava_database_installed.stdout )

#
- name: Enabling PL/Java Language Support for GPDB 4.x
  become_user: gpadmin
  shell: ( . {{ gpdb.base_dir }}/greenplum-db/greenplum_path.sh && createlang pljava -d {{ pljava.database_name }} )
  args:
    executable: /bin/bash
  register: pljava_language_support_enabled
  when: ( inventory_hostname in groups['master'] and pljava.gpdb_version == "4.3" and '100' not in pljava_database_installed.stdout )

#
- name: Enabling PL/Java Language Support for GPDB 6.x or 7.x
  become_user: gpadmin
  shell: ( . {{ gpdb.base_dir }}/greenplum-db/greenplum_path.sh && psql -d {{ pljava.database_name }} -c "CREATE EXTENSION pljava;" )
  args:
    executable: /bin/bash
  register: pljava_language_support_enabled
  when: ( inventory_hostname in groups['master'] and pljava.gpdb_version|int <= 7 and '100' not in pljava_database_installed.stdout )

#
- name: Set the pljava_classpath server configuration parameter in the master postgresql.conf file.
  become_user: gpadmin
  shell: ( . {{ gpdb.base_dir }}/greenplum-db/greenplum_path.sh && gpconfig -c pljava_classpath -v 'examples.jar:pljava.jar' )
  args:
    executable: /bin/bash
  register: pljava_classpath_set
  when: (  inventory_hostname in groups['master'] and pljava.gpdb_version <= 7 and '100' not in pljava_database_installed.stdout )

