---

# Uninstall PLContainer extention on GPDB

- name: Check if the GPDB software is already installed
  stat: path={{ gpdb_base_dir }}/greenplum-db
  register: gpdb_installed

- name: Stop if GPDB software is not installed
  fail: msg="Greenplum Database software is not installed!"
  when: gpdb_installed.stat.exists != True

- name: Uninstall dependent RPMS for Docker
  yum: name={{ item }} state=absent
  with_items:
    - docker-ce
    - yum-utils
    - device-mapper-persistent-data
    - lvm2

- name: Remove docker repo
  become_user: root
  file:
    owner: root
    group: root
    path: /etc/yum.repos.d/docker-ce.repo
    state: absent

- name: List the Docker images
  become_user: gpadmin
  shell: ( . {{ gpdb_base_dir }}/greenplum-db/greenplum_path.sh && plcontainer image-list )
  register: docker_images_listed
  when:
    - inventory_hostname in groups['master']

- name: Verify that database for plcontainer is installed
  become_user: gpadmin
  shell: ( . {{ gpdb_base_dir }}/greenplum-db/greenplum_path.sh && psql -tAc "SELECT 100 FROM pg_database WHERE datname='{{ plcontainer_database_name }}'" )
  register: plcontainer_database_installed
  when: inventory_hostname in groups['master']

- name: Remove PL/Container Support far a Database
  become_user: gpadmin
  shell: ( . {{ gpdb_base_dir }}/greenplum-db/greenplum_path.sh && psql -d {{ plcontainer_database_name }} -c 'DROP EXTENSION plcontainer CASCADE;' )
  register: plcontainer_support_removed
  when:
    - inventory_hostname in groups['master']
    - "'100' in plcontainer_database_installed.stdout"

- name: Drop database for plcontainer
  become_user: gpadmin
  shell: ( . {{ gpdb_base_dir }}/greenplum-db/greenplum_path.sh && dropdb {{ plcontainer_database_name }} )
  register: plcontainer_database_deleted
  when:
    - inventory_hostname in groups['master']
    - "'100' in plcontainer_database_installed.stdout"

- name: Verify that database for plr is installed
  become_user: gpadmin
  shell: ( . {{ gpdb_base_dir }}/greenplum-db/greenplum_path.sh && psql -tAc "SELECT 100 FROM pg_database WHERE datname='{{ plr_database_name }}'" )
  register: plr_database_installed
  when: inventory_hostname in groups['master']

- name: Remove PL/R Support far a Database
  become_user: gpadmin
  shell: ( . {{ gpdb_base_dir }}/greenplum-db/greenplum_path.sh && psql -d {{ plr_database_name }} -c 'DROP EXTENSION plcontainer CASCADE;' )
  register: plr_support_removed
  when:
    - inventory_hostname in groups['master']
    - "'100' in plr_database_installed.stdout"

- name: Drop database for plr
  become_user: gpadmin
  shell: ( . {{ gpdb_base_dir }}/greenplum-db/greenplum_path.sh && dropdb {{ plr_database_name }} )
  register: plr_database_deleted
  when:
    - inventory_hostname in groups['master']
    - "'100' in plr_database_installed.stdout"

- name: Examin the shared_preload_libraries server configuration parameter settings
  become_user: gpadmin
  shell: ( . {{ gpdb_base_dir }}/greenplum-db/greenplum_path.sh && gpconfig -s shared_preload_libraries )
  register: shared_preload_libraries_listed
  when:
    - inventory_hostname in groups['master']

- name: Remove the configuration parameter setting if plc_coordinator is the only library listed
  become_user: gpadmin
  shell: ( . {{ gpdb_base_dir }}/greenplum-db/greenplum_path.sh && gpconfig -r shared_preload_libraries )
  register: shared_preload_libraries_removed
  when:
    - inventory_hostname in groups['master']
    - "{{ shared_preload_libraries_listed.stdout.find('plc_coordinator') != -1 }}"

- name: Remove plc_coordinator from the list and re-set the configuration parameter if there are multiple libraries listed
  become_user: gpadmin
  shell: ( . {{ gpdb_base_dir }}/greenplum-db/greenplum_path.sh && gpconfig -c shared_preload_libraries -v 'diskquota' )
  register: shared_preload_libraries_removed
  when:
    - inventory_hostname in groups['master']
    - "{{ shared_preload_libraries_listed.stdout.find('plc_coordinator') != -1 }}"
    - "{{ shared_preload_libraries_listed.stdout_lines | length >= 2 }}"

- name: Restart the Greenplum Database
  become_user: gpadmin
  shell: ( . {{ gpdb_base_dir }}/greenplum-db/greenplum_path.sh && gpstop -ra )
  async: 60
  poll: 5
  when:
    - inventory_hostname in groups['master']

- name: Uninstall the PL/Container language extension
  become_user: gpadmin
  shell: ( . {{ gpdb_base_dir }}/greenplum-db/greenplum_path.sh && gppkg -r plcontainer-{{ plcontainer_prefix_major_version }}{{ plcontainer_major_version }}.{{ plcontainer_minor_version }}.{{ plcontainer_patch_version }}-{{ plcontainer_gpdb_version }}-{{ plcontainer_rhel_version }} )
  register: plcontainer_extension_uninstalled
  when:
    - inventory_hostname in groups['master']

- name: Uninstall the PL/R language extension
  become_user: gpadmin
  shell: ( . {{ gpdb_base_dir }}/greenplum-db/greenplum_path.sh && gppkg -r plr-{{ plr_prefix_major_version }}{{ plr_major_version }}.{{ plr_minor_version }}.{{ plr_patch_version }}-{{ plr_gpdb_version }}-{{ plr_rhel_version }} )
  register: plr_extension_uninstalled
  when:
    - inventory_hostname in groups['master']

- name: Restart the Greenplum Database
  become_user: gpadmin
  shell: ( . {{ gpdb_base_dir }}/greenplum-db/greenplum_path.sh && gpstop -ra )
  async: 60
  poll: 5
  when:
    - inventory_hostname in groups['master']

# shell: plcontainer image-delete
# shell: docker ps -a lists all
# shell: docker images 
# shell: docker rmi
# shell: docker rm
