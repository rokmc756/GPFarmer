---
- name: Check if the Greenplum Database Software is Already Installed
  stat: path={{ gpdb.base_dir }}/greenplum-db
  register: gpdb_installed


- name: Stop if Greenplum Database Software is Not Installed
  fail: msg="Greenplum Database Software is Not Installed!"
  when: gpdb_installed.stat.exists != True


- name: Uninstall Dependent RPMS for Docker
  yum: name={{ item }} state=absent
  with_items:
    - slirp4netns
    - fuse-overlayfs
    - container-selinux
    - docker-ce
    - yum-utils
    - device-mapper-persistent-data
    - lvm2


- name: Remove Docker Repository
  become_user: root
  file:
    owner: root
    group: root
    path: /etc/yum.repos.d/docker-ce.repo
    state: absent


- name: List the Docker Images
  become_user: gpadmin
  shell: ( . {{ gpdb.base_dir }}/greenplum-db/greenplum_path.sh && plcontainer image-list )
  register: docker_images_listed
  ignore_errors: true
  when: inventory_hostname in groups['master']


- name: Verify that Database for PL/Container is Installed
  become_user: gpadmin
  shell: ( . {{ gpdb.base_dir }}/greenplum-db/greenplum_path.sh && psql -tAc "SELECT 100 FROM pg_database WHERE datname='{{ plcon.database_name }}'" )
  register: plcon_database_installed
  ignore_errors: true
  when: inventory_hostname in groups['master']


- name: Remove PL/Container Support far a Database
  become_user: gpadmin
  shell: ( . {{ gpdb.base_dir }}/greenplum-db/greenplum_path.sh && psql -d {{ plcon.database_name }} -c 'DROP EXTENSION plcontainer CASCADE;' )
  register: plcon_support_removed
  ignore_errors: true
  when: ( inventory_hostname in groups['master'] and '100' in plcon_database_installed.stdout )


- name: Drop Database for PL/Container
  become_user: gpadmin
  shell: ( . {{ gpdb.base_dir }}/greenplum-db/greenplum_path.sh && dropdb {{ plcon.database_name }} )
  register: plcon_database_deleted
  ignore_errors: true
  when: ( inventory_hostname in groups['master'] and '100' in plcon_database_installed.stdout )


- name: Verify that Database for PL/R is Installed
  become_user: gpadmin
  shell: ( . {{ gpdb.base_dir }}/greenplum-db/greenplum_path.sh && psql -tAc "SELECT 100 FROM pg_database WHERE datname='{{ plr.database_name }}'" )
  register: plr_database_installed
  ignore_errors: true
  when: inventory_hostname in groups['master']


- name: Remove PL/R Support for a Database
  become_user: gpadmin
  shell: ( . {{ gpdb.base_dir }}/greenplum-db/greenplum_path.sh && psql -d {{ plr.database_name }} -c 'DROP EXTENSION plr CASCADE;' )
  register: plr_support_removed
  ignore_errors: true
  when: ( inventory_hostname in groups['master'] and '100' in plr_database_installed.stdout )


- name: Drop Database for PL/R
  become_user: gpadmin
  shell: ( . {{ gpdb.base_dir }}/greenplum-db/greenplum_path.sh && dropdb {{ plr.database_name }} )
  register: plr_database_deleted
  ignore_errors: true
  when: ( inventory_hostname in groups['master'] and '100' in plr_database_installed.stdout )


- name: Examin the shared_preload_Libraries Server Configuration Parameter Settings
  become_user: gpadmin
  shell: ( . {{ gpdb.base_dir }}/greenplum-db/greenplum_path.sh && gpconfig -s shared_preload_libraries )
  register: shared_preload_libraries_listed
  ignore_errors: true
  when: inventory_hostname in groups['master']


- name: Remove the Configuration Parameter Setting if PL/Container_Coordinator is the Only Library Listed
  become_user: gpadmin
  shell: ( . {{ gpdb.base_dir }}/greenplum-db/greenplum_path.sh && gpconfig -r shared_preload_libraries )
  register: shared_preload_libraries_removed
  ignore_errors: true
  when: ( inventory_hostname in groups['master'] and shared_preload_libraries_listed.stdout.find('plc_coordinator') != -1 )


- name: Remove plc_coordinator from the List and Re-Set the Configuration Parameter if There are Multiple Libraries Listed
  become_user: gpadmin
  shell: ( . {{ gpdb.base_dir }}/greenplum-db/greenplum_path.sh && gpconfig -c shared_preload_libraries -v 'diskquota' )
  register: shared_preload_libraries_removed
  ignore_errors: true
  when: ( inventory_hostname in groups['master'] and shared_preload_libraries_listed.stdout.find('plc_coordinator') != -1 and shared_preload_libraries_listed.stdout_lines|length >= 2 )


- name: Restart the Greenplum Database
  become_user: gpadmin
  shell: ( . {{ gpdb.base_dir }}/greenplum-db/greenplum_path.sh && gpstop -ra )
  async: 60
  poll: 5
  ignore_errors: true
  when: inventory_hostname in groups['master']


- set_fact:
    gppkg_remove_cmd: "gppkg -r"
  when: inventory_hostname in groups['master'] and plcon.gpdb_version <= 6


- set_fact:
    gppkg_remove_cmd: "gppkg -a remove"
  when: inventory_hostname in groups['master'] and plcon.gpdb_version >= 7


- name: Uninstall the PL/Container language extension
  become_user: gpadmin
  shell: ( . {{ gpdb.base_dir }}/greenplum-db/greenplum_path.sh && {{ gppkg_remove_cmd }} plcontainer )
  register: plcon_extension_uninstalled
  ignore_errors: true
  when: inventory_hostname in groups['master']

#
- name: Uninstall the PL/R language extension
  become_user: gpadmin
  shell: ( . {{ gpdb.base_dir }}/greenplum-db/greenplum_path.sh && {{ gppkg_remove_cmd }} plr )
  register: plr_extension_uninstalled
  ignore_errors: true
  when: inventory_hostname in groups['master']

#
- name: Restart the Greenplum Database
  become_user: gpadmin
  shell: ( . {{ gpdb.base_dir }}/greenplum-db/greenplum_path.sh && gpstop -ra )
  async: 60
  poll: 5
  ignore_errors: true
  when: inventory_hostname in groups['master']

# shell: plcontainer image-delete
# shell: docker ps -a lists all
