---
# Install PLContainer Extention on Greenplum database
#
- name: Check if the GPDB Software is already installed
  stat: path={{ gpdb.base_dir }}/greenplum-db
  register: gpdb_installed

#
- name: Stop if GPDB Software is not installed
  fail: msg="Greenplum Database software is not installed!"
  when: gpdb_installed.stat.exists != True

#
- name: Verify that database is up and running
  become_user: gpadmin
  changed_when: False
  shell: ( . {{ gpdb.base_dir }}/greenplum-db/greenplum_path.sh && psql -c "SELECT VERSION()" )
  register: select_version
  when: inventory_hostname in groups['master']
  failed_when: "'(Greenplum Database ' not in select_version.stdout"

#
- name: Verify if PL/Container Package is installed
  become_user: gpadmin
  command: 'rpm -q plcontainer --dbpath /usr/local/greenplum-db/share/packages/database'
  ignore_errors: true
  register: plcon_installed
  changed_when: False
  when: inventory_hostname in groups['master']

#
- name: Stop if PL/Container Package is not installed
  fail: msg="PL/Container Package has not been installed yet!"
  when:
    - inventory_hostname in groups['master']
    - "'package plcontainer is not installed' not in plcon_installed.stdout"

#
- name: Copy PL/Container Pakcage file
  copy: src=plcontainer-{{ plcon.prefix_major_version }}{{ plcon.major_version }}.{{ plcon.minor_version }}.{{ plcon.patch_version }}-{{ plcon.gpdb_version }}-{{ plcon.os_version }}_x86_64.gppkg dest={{ gpdb.admin_home_dir }} mode=0644 owner=gpadmin group=gpadmin
  when:
    - inventory_hostname in groups['master']
    - "'package plcontainer is not installed' in plcon_installed.stdout"

- name: Install PL/Container Package
  become_user: gpadmin
  shell: ( . {{ gpdb.base_dir }}/greenplum-db/greenplum_path.sh && gppkg -i {{ gpdb.admin_home_dir }}/plcontainer-{{ plcon.prefix_major_version }}{{ plcon.major_version }}.{{ plcon.minor_version }}.{{ plcon.patch_version }}-{{ plcon.gpdb_version }}-{{ plcon.os_version }}_x86_64.gppkg )
  when:
    - inventory_hostname in groups['master']
    - "'package plcontainer is not installed' in plcon_installed.stdout"

#
- name: Restart GPDB and apply parameters for PL/Container in greenplum_path.sh
  become_user: gpadmin
  shell: ( . {{ gpdb.base_dir }}/greenplum-db/greenplum_path.sh && gpstop -ra )
  async: 60
  poll: 5
  when: inventory_hostname in groups['master']

#
- name: Verify that database for PL/Container Package is installed
  become_user: gpadmin
  shell: ( . {{ gpdb.base_dir }}/greenplum-db/greenplum_path.sh && psql -tAc "SELECT 100 FROM pg_database WHERE datname='{{ plcon.database_name }}'" )
  register: plcon_database_installed
  when: inventory_hostname in groups['master']

#
- name: Create database for PL/Container
  become_user: gpadmin
  shell: ( . {{ gpdb.base_dir }}/greenplum-db/greenplum_path.sh && createdb {{ plcon.database_name }} )
  register: plcon_database_created
  when: "'100' not in plcon_database_installed.stdout"

#
- name: Enable PL/Container for a databases by running
  become_user: gpadmin
  shell: ( . {{ gpdb.base_dir }}/greenplum-db/greenplum_path.sh && psql -d {{ plcon.database_name }} -f {{ gpdb.base_dir }}/greenplum-db/share/postgresql/plcontainer/plcon_install.sql )
  register: plcon_database_enabled
  when: "'100' not in plcon_database_installed.stdout"

#
- name: Initialize PL/Container configuration on the GPDB hosts
  become_user: gpadmin
  shell: ( . {{ gpdb.base_dir }}/greenplum-db/greenplum_path.sh && plcontainer configure --reset )
  register: plcon_configuration_initialized
  when: inventory_hostname in groups['master']
