---
# Install Greenplum Streaming Server on Kafka Broker and load sample data onto it

- name: Unset variables of kafka_major_version retruned from kafka-topics.sh
  set_fact:
    kafka_major_version:

- name: Check Kafka version
  become: yes
  shell: ( /bin/bash /usr/local/kafka/bin/kafka-topics.sh --version )
  register: kafka_version
  when:
    - inventory_hostname in groups['kafka-brokers']  # At Kafka Broker

#- debug: msg={{ kafka_version.stdout }}
#  when: inventory_hostname in groups['kafka-brokers'] and print_debug
#- debug: msg="{{(kafka_version.stdout_lines|last|split('.')|first|int)}}" - OK
#  when: inventory_hostname in groups['kafka-brokers'] and print_debug

- name: Set fact for kafka major version
  set_fact:
    kafka_major_version: "{{(kafka_version.stdout_lines|last|split('.')|first|int)}}"
  delegate_to: "{{ item }}"
  delegate_facts: True
  with_items: "{{ groups['all'] }}"
  when: inventory_hostname in groups['kafka-brokers']
  # when: inventory_hostname in groups['master'] or inventory_hostname in groups['kafka-brokers']

#
- name: Stop if kafka major_version is not 2 or 3
  fail: msg="(This playbook only allow kafka major version 2 or 3. This is currently {{ kafka_major versino }})"
  when:
    - inventory_hostname in groups['kafka-brokers']
    - ( kafka_major_version == 2 or kafka_major_version == 3 )

#
- name: "Check if GPSS rpm package is installed"
  package_facts:
    manager: "auto"
  when:
    - inventory_hostname in groups['kafka-brokers']  # At Kafka Broker

#
- name: Stop if GPSS rpm package is installed
  fail: msg="GPSS rpm package is already installed!"
  when:
   - inventory_hostname in groups['kafka-brokers']  # At Kafka Broker
   - "'gpss' in ansible_facts.packages"

#
- name: Copy GPSS rpm package
  become_user: gpadmin                              # ETL user
  copy: src=gpss-{{ gpss_gpdb_version }}-{{ gpss_major_version }}.{{ gpss_minor_version }}{{ gpss_patch_version }}-{{ gpss_rhel_version_kafka }}-x86_64.rpm dest={{ gpadmin_home_dir }} mode=0644 owner=gpadmin group=gpadmin
  when:
    - inventory_hostname in groups['kafka-brokers']  # At Kafka Broker

#
- name: Install GPSS rpm package in {{ gpdb_base_dir }}
  become: yes
  yum:
    name: /home/gpadmin/gpss-{{ gpss_gpdb_version }}-{{ gpss_major_version }}.{{ gpss_minor_version }}{{ gpss_patch_version }}-{{ gpss_rhel_version_kafka }}-x86_64.rpm
    state: present
  async: 60
  poll: 5
  when:
    - inventory_hostname in groups['kafka-brokers']  # At Kafka Broker

#
- name: Chown gpamdin for GPSS install directory
  become: yes
  file:
    dest: "{{ gpdb_base_dir }}/gpss"
    owner: gpadmin
    group: gpadmin
    mode: u=rwX,g=rX,o=rX
    state: directory
    recurse: yes
  when: inventory_hostname in groups['kafka-brokers']  # At Kafka Broker

#
- name: Creates working base directory for kafka
  become: yes
  file:
    path: "{{ item }}"
    state: directory
    owner: gpadmin
    group: gpadmin
    mode: 0775
  with_items:
    - "{{ kafka_base_dir }}"
  when: inventory_hostname in groups['kafka-brokers']

#
- name: Copy scripts to manage kafka topics
  become: yes
  template: src=kafka-{{ kafka_major_version}}.x/{{ item }}.j2 dest={{ kafka_base_dir }}/{{ item }} owner=root group=root mode=755 force=yes
  register: create_table_query_copied
  with_items:
    - "01-create-topic.sh"
    - "02-stream-data-into-topic.sh"
    - "03-verify-data-inserted.sh"
    - "04-list-topics.sh"
    - "05-check-replica.sh"
    - "06-delete-topic.sh"
  when: inventory_hostname in groups['kafka-brokers']  # At Kafka Broker

- name: Create Kafka Topic
  become: yes
  shell: ( /bin/bash {{ kafka_base_dir }}/01-create-topic.sh )
  register: topic_created
  when:
    - inventory_hostname in groups['kafka-brokers']  # At Kafka Broker
  #  "{{ kafka_install_dir }}//bin/kafka-topics.sh --create --bootstrap-server {{ kafka_broker_hostname }}:9092 --replication-factor {{ kafka_replication_factor }} --partitions {{ kafka_partitions }} --topic {{ kafka_topic_name }}"

- debug: msg={{ topic_created }}
  when: inventory_hostname in groups['kafka-brokers'] and print_debug

#
- name: List Kafka Topics
  become: yes
  shell: ( /bin/bash {{ kafka_base_dir }}/04-list-topics.sh )
  register: topic_listed
  when:
    - inventory_hostname in groups['kafka-brokers']  # At Kafka Broker
  #  "{{ kafka_install_dir }}//bin/kafka-topics.sh --list --bootstrap-server {{ kafka_broker_hostname }}:9092"

- debug: msg={{ topic_listed }}
  when: inventory_hostname in groups['kafka-brokers'] and print_debug

# kafka-verifiable로 시작하는 2개의 스크립트를 사용하면 String 타입 메시지 값을 코드 없이 주고받을 수 있다. 카프카 클러스터 설치가 완료된 이후에 토픽에 데이터를 전송하여 간단한 네트워크 통신 테스트를 할 대 유용하다.
#kafka-verifiable-producer.sh --bootstrap-server localhost:9092 \
#--max-messages 10 \
#--topic verify-test

#
- name: Copy json sammple data
  template: src=kafka-{{ kafka_major_version }}.x/sample_data.json dest={{ kafka_base_dir }}/sample_data.json owner=gpadmin group=gpadmin mode=644 force=yes
  register: json_sample_data_copied
  when: inventory_hostname in groups['kafka-brokers']  # At Kafka Broker

- debug: msg={{ json_sample_data_copied }}
  when: inventory_hostname in groups['kafka-brokers'] and print_debug

#
- name: Stream data into Kafka Topic
  become: yes
  shell: ( /bin/bash {{ kafka_base_dir }}/02-stream-data-into-topic.sh )
  register: topic_data_streamed
  when: inventory_hostname in groups['kafka-brokers']  # At Kafka Broker
  # "{{ kafka_install_dir }}//bin/kafka-console-producer.sh --broker-list {{ kafka_broker_hostname }}:9092 --topic {{ kafka_topic_name }} < /home/gpadmin/sample_data.json"

- debug: msg={{ topic_data_streamed }}
  when: inventory_hostname in groups['kafka-brokers'] and print_debug

#
- name: Check Replication factors
  become: yes
  shell: ( /bin/bash {{ kafka_base_dir }}/05-check-replica.sh )
  register: replica_factors_checked
  when:
    - inventory_hostname in groups['kafka-brokers']  # At Kafka Broker
  # "{{ kafka_install_dir }}//bin/kafka-topics.sh --describe --bootstrap-server {{ kafka_broker_hostname }}:9092 --topic {{ kafka_topic_name }}"

- debug: msg={{ replica_factors_checked }}
  when: inventory_hostname in groups['kafka-brokers'] and print_debug

#- name: Check if data is inserting into Kafka Topic
#  become: yes
#  shell:
#    "{{ kafka_install_dir }}//bin/kafka-console-consumer.sh --bootstrap-server {{ kafka_broker_hostname }}:9092 --topic {{ kafka_topic_name }} --from-beginning"
#  when: inventory_hostname in groups['kafka-brokers']

#- name: Before using the GPSS ETL tools
#  become: yes
#  shell: ( source /usr/local/gpss/gpss_path.sh )
#  when:
#    - inventory_hostname in groups['kafka-brokers']  # At Kafka Broker
