---
# Install madlib extention on Greenplum database
#
#
- name: Check if the Greenplum Database software is already installed
  stat: path={{ gpdb.base_dir }}/greenplum-db
  register: gpdb_installed
  when: inventory_hostname in groups['master']

#
- name: Stop if database software is not installed
  fail: msg="Greenplum Database software is not installed!"
  when: inventory_hostname in groups['master'] and  gpdb_installed.stat.exists != True

#
- name: Verify that database is up and running
  become_user: gpadmin
  changed_when: False
  shell: ( . {{ gpdb.base_dir }}/greenplum-db/greenplum_path.sh && psql -c 'SELECT VERSION()' )
  args:
    executable: /bin/bash
  register: select_version
  failed_when: "'(Greenplum Database ' not in select_version.stdout"
  when: inventory_hostname in groups['master']

#
- name: Check if the MADLib extention is already installed
  stat: path={{ gpdb.base_dir }}/greenplum-db/madlib
  register: madlib_installed
  when: inventory_hostname in groups['master']

#
- name: Stop if MADLib extention software is already installed
  fail: msg="madlib extention software is already installed!"
  when: inventory_hostname in groups['master'] and  madlib_installed.stat.exists == True

#
- set_fact:
    gppkg_install_cmd: "gppkg -i"
    madpack_cmd: "madlib/bin/madpack"
    madlib_package_name: madlib-{{ madlib_major_version }}.{{ madlib_minor_version }}.{{ madlib_patch_version }}+{{ madlib_build_version }}-gp{{ madlib_gpdb_version }}-{{ madlib_os_version }}-{{ madlib_arch_type }}
    madlib_package_bin_name: madlib-{{ madlib_major_version }}.{{ madlib_minor_version }}.{{ madlib_patch_version }}+{{ madlib_build_version }}-gp{{ madlib_gpdb_version }}-{{ madlib_os_version }}-{{ madlib_arch_type }}.gppkg
    madlib_directory_name: madlib-{{ madlib_major_version }}.{{ madlib_minor_version }}.{{ madlib_patch_version }}+{{ madlib_build_version }}-gp{{ madlib_gpdb_version }}-{{ madlib_os_version }}-{{ madlib_arch_type }}
  when:
    - inventory_hostname in groups['master']
    - ( ansible_distribution == "RedHat" or ansible_distribution == "CentOS" or ansible_distribution == "Rocky" ) and madlib_major_version <= 1

#
- set_fact:
    gppkg_install_cmd: "gppkg -a install"
    # madpack_cmd: "madlib/Versions/2.0.0/bin/madpack"
    madpack_cmd: "madlib/bin/madpack"
    madlib_package_name: madlib-{{ madlib_major_version }}.{{ madlib_minor_version }}.{{ madlib_patch_version }}-gp{{ madlib_gpdb_version }}-{{ madlib_os_version }}-{{ madlib_arch_type }}
    madlib_package_bin_name: madlib-{{ madlib_major_version }}.{{ madlib_minor_version }}.{{ madlib_patch_version }}-gp{{ madlib_gpdb_version }}-{{ madlib_os_version }}-{{ madlib_arch_type }}.gppkg.tar.gz
    madlib_directory_name: madlib-{{ madlib_major_version }}.{{ madlib_minor_version }}.{{ madlib_patch_version }}-gp{{ madlib_gpdb_version }}-{{ madlib_os_version }}-{{ madlib_arch_type }}
  when:
    - inventory_hostname in groups['master']
    - ( ansible_distribution == "RedHat" or ansible_distribution == "CentOS" or ansible_distribution == "Rocky" ) and madlib_major_version >= 2

#
- set_fact:
    gppkg_install_cmd: "gppkg -i"
    madpack_cmd: "madlib/bin/madpack"
    madlib_package_name: madlib-{{ madlib_major_version }}.{{ madlib_minor_version }}.{{ madlib_patch_version }}+{{ madlib_build_version }}-gp{{ madlib_gpdb_version }}-{{ madlib_os_version }}-{{ madlib_arch_type }}
    madlib_package_bin_name: madlib-{{ madlib_major_version }}.{{ madlib_minor_version }}.{{ madlib_patch_version }}+{{ madlib_build_version }}-gp{{ madlib_gpdb_version }}-{{ madlib_os_version }}-{{ madlib_arch_type }}.gppkg
    madlib_directory_name: madlib-{{ madlib_major_version }}.{{ madlib_minor_version }}.{{ madlib_patch_version }}+{{ madlib_build_version }}-gp{{ madlib_gpdb_version }}-{{ madlib_os_version }}-{{ madlib_arch_type }}
  when:
    - inventory_hostname in groups['master']
    - ( ansible_distribution == "Ubuntu" or ansible_distribution == "Debian" ) and madlib_major_version <= 1

#
- set_fact:
    gppkg_install_cmd: "gppkg -a install"
    # madpack_cmd: "madlib/Versions/2.0.0/bin/madpack"
    madpack_cmd: "madlib/bin/madpack"
    madlib_package_name: madlib-{{ madlib_major_version }}.{{ madlib_minor_version }}.{{ madlib_patch_version }}+{{ madlib_build_version }}-gp{{ madlib_gpdb_version }}-{{ madlib_os_version }}-{{ madlib_arch_type }}
    madlib_package_bin_name: madlib-{{ madlib_major_version }}.{{ madlib_minor_version }}.{{ madlib_patch_version }}-gp{{ madlib_gpdb_version }}-{{ madlib_os_version }}-{{ madlib_arch_type }}.gppkg.tar.gz
    madlib_directory_name: madlib-{{ madlib_major_version }}.{{ madlib_minor_version }}.{{ madlib_patch_version }}-gp{{ madlib_gpdb_version }}-{{ madlib_os_version }}-{{ madlib_arch_type }}
  when:
    - inventory_hostname in groups['master']
    - ( ansible_distribution == "Ubuntu" or ansible_distribution == "Debian" ) and madlib_major_version >= 2

#
- name: Copy MADLib extention tar.gz file
  copy: src={{ madlib_package_name }}.tar.gz dest={{ gpdb.admin_home_dir }} mode=0644 owner=gpadmin group=gpadmin
  when: inventory_hostname in groups['master'] and madlib_installed.stat.exists != True

#
- name: Untar MADLib extention archive
  unarchive: src={{ gpdb.admin_home_dir }}/{{ madlib_package_name }}.tar.gz dest={{ gpdb.admin_home_dir }} copy=no owner=gpadmin group=gpadmin
  when: inventory_hostname in groups['master'] and madlib_installed.stat.exists != True

#
- name: Install MADLib extention package
  become_user: gpadmin
  shell: ( . {{ gpdb.base_dir }}/greenplum-db/greenplum_path.sh && {{ gppkg_install_cmd }} {{ gpdb.admin_home_dir }}/{{ madlib_directory_name }}/{{ madlib_package_bin_name }} )
  args:
    executable: /bin/bash
  register: madlib_package_installed
  ignore_errors: true
  async: 600
  poll: 10
  # until: madlib_package_installed is succeeded
  # retries: 10
  # delay: 30
  when: inventory_hostname in groups['master'] and madlib_installed.stat.exists != True

#
- name: Verify that database for MADLib Extention is installed
  become_user: gpadmin
  shell: ( . {{ gpdb.base_dir }}/greenplum-db/greenplum_path.sh && psql -tAc "SELECT 100 FROM pg_database WHERE datname='{{ madlib_database_name }}'" )
  args:
    executable: /bin/bash
  register: madlib_database_installed
  when: inventory_hostname in groups['master']

#
- name: Create database for MADLib
  become_user: gpadmin
  shell: ( . {{ gpdb.base_dir }}/greenplum-db/greenplum_path.sh && createdb {{ madlib_database_name }} )
  args:
    executable: /bin/bash
  register: madlib_database_created
  when: inventory_hostname in groups['master'] and "'100' not in madlib_database_installed.stdout"

#
- name: Add MADLib function
  become_user: root
  shell: ( . {{ gpdb.base_dir }}/greenplum-db/greenplum_path.sh && $GPHOME/{{ madpack_cmd }} -s madlib -p greenplum -c gpadmin@{{ madlib_mdw_hostname }}:5432/{{ madlib_database_name }} install )
  args:
    executable: /bin/bash
  register: madlib_function_added
  until: madlib_function_added is succeeded
  retries: 5
  delay: 120
  changed_when: madlib_database_created == True
  when: inventory_hostname in groups['master']

# Need to debug why errors occurs in the part items
#- name: Check if MADLib function are added
#  become_user: root
#  shell: ( . {{ gpdb.base_dir }}/greenplum-db/greenplum_path.sh && $GPHOME/madlib/bin/madpack -s madlib -p greenplum -c gpadmin@{{ madlib_mdw_hostname }}:5432/{{ madlib_database_name }} install-check )
#  args:
#    executable: /bin/bash
#  register: madlib_function_checked
#  ignore_errors: true
#  # until: madlib_function_checked is succeeded
#  # retries: 3
#  # delay: 300
#  changed_when: madlib_function_installed == True
#  when: inventory_hostname in groups['master']
