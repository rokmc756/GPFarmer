---
# Uninstall MADLib Extention on Greenplum database

#
- name: Check if the GPDB software is already installed
  stat: path={{ gpdb.base_dir }}/greenplum-db
  register: gpdb_installed

#
- name: Stop if GPDB software is not installed
  fail: msg="Greenplum Database software is not installed!"
  when: gpdb_installed.stat.exists != True and gpdb_installed.stat.islnk != True

#
- name: Verify that database is up and running
  become_user: gpadmin
  changed_when: False
  shell: ( . {{ gpdb.base_dir }}/greenplum-db/greenplum_path.sh && psql -c "SELECT VERSION()" )
  register: select_version
  failed_when: "'(Greenplum Database ' not in select_version.stdout"
  when: ( inventory_hostname in groups['master'] and gpdb_installed.stat.exists == True )

#
- name: Verify that database for MADlib extention is installed
  become_user: gpadmin
  shell: ( . {{ gpdb.base_dir }}/greenplum-db/greenplum_path.sh && psql -tAc "SELECT 100 FROM pg_database WHERE datname='{{ madlib.database_name }}'" )
  register: madlib_database_installed
  when: ( inventory_hostname in groups['master'] and '(Greenplum Database ' in select_version.stdout )

#
- set_fact:
    gppkg_remove_cmd: "gppkg -r"
    check_madlib_installed: "gppkg -q --all | grep madlib | cut -d - -f 1"
    madlib_package_name: madlib-{{ madlib.prefix_major_version }}{{ madlib.major_version }}.{{ madlib.minor_version }}.{{ madlib.patch_version }}
  when: inventory_hostname in groups['master'] and madlib.gpdb_version|int <= 6 and ( madlib_os_version | regex_replace('[^0-9]','')|int <= 8 )

#
- set_fact:
    gppkg_remove_cmd: "gppkg -r"
    check_madlib_installed: "gppkg -q --all | grep madlib | cut -d - -f 1"
    madlib_package_name: madlib-{{ madlib.prefix_major_version }}{{ madlib.major_version }}.{{ madlib.minor_version }}-{{ madlib.patch_version }}
  when: inventory_hostname in groups['master'] and madlib.gpdb_version|int >= 7 and ( madlib.os_version | regex_replace('[^0-9]','')|int >= 8 )

#
- set_fact:
    gppkg_remove_cmd: "gppkg -a -f remove"
    check_madlib_installed: "gppkg query | grep madlib | awk '{print $1}'"
    madlib_package_name: madlib{{ madlib.prefix_major_version }}{{ madlib.major_version }}.{{ madlib.minor_version }}
  when: inventory_hostname in groups['master'] and madlib.gpdb_version|int >= 7 and ( madlib.os_version | regex_replace('[^0-9]','')|int >= 8 )

#
- name: Verify if MADLib gppkg is installed
  become_user: gpadmin
  shell: ( source {{ gpdb.base_dir }}/greenplum-db/greenplum_path.sh && {{ check_madlib_installed }} )
  ignore_errors: true
  register: madlib_installed
  changed_when: False
  when: inventory_hostname in groups['master']

#
- name: Print the result if MADLib is not installed
  debug:
    msg: "{{ madlib_installed.stdout }}"
  when: inventory_hostname in groups['master']

#
- name: Stop if MADLib gppkg package is not existed
  fail: msg="MADLib gppkg package is not installed!"
  when: ( inventory_hostname in groups['master'] and 'madlib' not in madlib_installed.stdout )

#
- name: Remove MADlib objects from the database
  become_user: gpadmin
  shell: |
    . {{ gpdb.base_dir }}/greenplum-db/greenplum_path.sh && $GPHOME/madlib/bin/madpack -s madlib -p greenplum -c gpadmin@{{ hostvars[groups['master'][0]]['ansible_hostname'] }}:5432/{{ madlib.database_name }} uninstall <<EOF
    y
    EOF
  register: madlib_extension_uninstalled
  ignore_errors: yes
  when: ( inventory_hostname in groups['master'] and 'madlib' in madlib_installed.stdout )

#
- name: Drop database for MADlib
  become_user: gpadmin
  shell: ( . {{ gpdb.base_dir }}/greenplum-db/greenplum_path.sh && dropdb {{ madlib.database_name }} )
  register: madlib_database_dropped
  when: ( inventory_hostname in groups['master'] and '100' in madlib_database_installed.stdout )

#
- name: Uninstall the GPDB MADlib Pakcage
  become_user: gpadmin
  shell: ( . {{ gpdb.base_dir }}/greenplum-db/greenplum_path.sh && {{ gppkg_remove_cmd }} madlib )
  register: madlib_package_uninstalled
  ignore_errors: true
  changed_when: madlib_database_installed == True
  when: ( inventory_hostname in groups['master'] and 'madlib' in madlib_installed.stdout )
  # shell: ( . {{ gpdb.base_dir }}/greenplum-db/greenplum_path.sh && {{ gppkg_remove_cmd }} {{ madlib_package_name }} )

#
- name: Check if the directory of MADlib package is still remained
  stat: path={{ gpdb.base_dir }}/greenplum-db/madlib
  register: madlib_dir_remained

#
- name: Remove MADLib directory still remained
  become: true
  file:
    owner: gpadmin
    group: gpadmin
    path: "{{ gpdb.base_dir }}/greenplum-db/madlib"
    state: absent
  when: madlib_dir_remained.stat.exists == True

#
- name: Restart GPDB after removing MADlib Extension
  become_user: gpadmin
  shell: ( . {{ gpdb.base_dir }}/greenplum-db/greenplum_path.sh && gpstop -ra )
  async: 60
  poll: 5
  when: ( inventory_hostname in groups['master'] )
