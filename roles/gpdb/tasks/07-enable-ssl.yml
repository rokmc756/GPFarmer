#
- name: Check if SSL Directory is already existed
  stat: path={{ gpdb_ssl_dir }}
  register: check_dir_sslkey_installed
  when: ( inventory_hostname in groups['master'] or inventory_hostname in groups['standby'] ) and enable_ssl == True

#
- name: Create SSL directory
  file: path={{ gpdb_ssl_dir }} state=directory owner=gpadmin group=gpadmin
  changed_when: False
  register: dir_sslkey_installed
  when: ( inventory_hostname in groups['master'] or inventory_hostname in groups['standby'] ) and ( check_dir_sslkey_installed.stat.exists != True and enable_ssl == True )

#
- name: Create SSL key to connect intoo Greenplum Database
  shell: ( openssl req -newkey rsa:2048 -x509 -keyout {{ gpdb_ssl_dir }}/cert.pem -new -text -out {{ gpdb_ssl_dir }}/server.req -days {{ gpdb_ssl_days }} -nodes -subj "/C={{ gpdb_ssl_country }}/ST={{ gpdb_ssl_state }}/L={{ gpdb_ssl_location }}/O={{ gpdb_ssl_organization }}/CN={{ gpdb_ssl_common_name }}/emailAddress={{ gpdb_ssl_email }}" )
  args:
    executable: /bin/bash
  when: ( inventory_hostname in groups['master'] or inventory_hostname in groups['standby'] ) and enable_ssl == True

#
- name: xxxxx
  shell: ( openssl rsa -in {{ gpdb_ssl_dir }}/cert.pem -out {{ gpdb_ssl_dir }}/server.key )
  args:
    executable: /bin/bash
  when: ( inventory_hostname in groups['master'] or inventory_hostname in groups['standby'] ) and enable_ssl == True

#
- name: Turn the certificate into a self-signed certificate so that the server will look for them.
  shell: ( openssl req -x509 -in {{ gpdb_ssl_dir }}/server.req -key {{ gpdb_ssl_dir }}/server.key -new -text -out {{ gpdb_ssl_dir }}/server.crt -days {{ gpdb_ssl_days }} -nodes -subj "/C={{ gpdb_ssl_country }}/ST={{ gpdb_ssl_state }}/L={{ gpdb_ssl_location }}/O={{ gpdb_ssl_organization }}/CN={{ gpdb_ssl_common_name }}/emailAddress={{ gpdb_ssl_email }}" )
  args:
    executable: /bin/bash
  when: ( inventory_hostname in groups['master'] or inventory_hostname in groups['standby'] ) and enable_ssl == True

#
- name: Change permission of ssl key files to login Greenplum Database via SSL
  file:
    path: "{{ gpdb_ssl_dir }}/{{ item }}"
    state: file
    owner: gpadmin
    group: gpadmin
    mode: "0600"
  with_items:
    - "server.key"
    - "server.crt"
    - "server.req"
    - "cert.pem"
  when: ( inventory_hostname in groups['master'] or inventory_hostname in groups['standby'] )

#
- name: Add ssl configuration file to authenticate ssl user into Greenplum Database
  lineinfile:
    dest: "{{ master_data_dir }}/{{ item.file }}"
    line: "{{ item.line }}"
    state: "{{ item.state }}"
  with_items:
    - { file: "pg_hba.conf",     line: "hostssl  all         all           0.0.0.0/0         md5",           state: present }
    - { file: "postgresql.conf", line: "ssl = on",           state: present }
  register: ssl_postgres_config
  when:
    - ( inventory_hostname in groups['master'] and enable_ssl == True and gpdb_initdb_with_standby == True ) or ( inventory_hostname in groups['standby'] and gpdb_initdb_with_standby == True and enable_ssl == True )
