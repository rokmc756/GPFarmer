##########################################################################################################################################################################
# Greenplum MPP Database installation
##########################################################################################################################################################################

- name: Copy Greenplum Database {{ gpdb.major_version }} {{ gpdb.binary_type|upper }} Packages
  copy: src={{ binary_installer_file }}.{{ gpdb.binary_type }} dest=/home/gpadmin/{{ binary_installer_file }}.{{ gpdb.binary_type }} mode=0644 owner=gpadmin group=gpadmin


- name: Remove Old temp Installer Directory
  file: path=/home/gpadmin/gpdb{{ gpdb.major_version }}-tmp-install state=absent
  changed_when: False
  when: gpdb_install == True


- name: Create New Temp Installer Directory
  file: path=/home/gpadmin/gpdb{{ gpdb.major_version }}-tmp-install state=directory owner=gpadmin group=gpadmin
  changed_when: False
  when: gpdb_install == True


- block:
  - name: Unzip Greenplum Database {{ gpdb.major_version }} archive (Ansible < 2.2)
    unarchive: src=/home/gpadmin/{{ binary_installer_file }}.zip dest=/home/gpadmin/gpdb{{ gpdb.major_version }}-tmp-install remote_src=yes copy=no owner=gpadmin group=gpadmin
    when: ansible_version.full is version_compare('2.2.0.0', operator='<', strict=False)

  - name: Unzip Greenplum Database {{ gpdb.major_version }} archive (Ansible >= 2.2)
    unarchive: src=/home/gpadmin/{{ binary_installer_file }}.zip dest=/home/gpadmin/gpdb{{ gpdb.major_version }}-tmp-install remote_src=yes owner=gpadmin group=gpadmin
    when: ansible_version.full is version_compare('2.2.0.0', operator='>=', strict=False)

  when: gpdb_install == True and (  gpdb.binary_type != 'rpm' and gpdb.binary_type != 'deb' )


- name: Check if Greenplum Database is Running
  stat: path=/tmp/.s.PGSQL.5432
  register: gpdb_running
  when: inventory_hostname in groups['master']


- name: Shutdown Greenplum Database
  become_user: gpadmin
  shell: ( . {{ gpdb.base_dir }}/greenplum-db/greenplum_path.sh && gpstop -a )
  args:
    executable: /bin/bash
  async: 60
  poll: 5
  when: ( inventory_hostname in groups['master'] and gpdb_running.stat.exists == True )


# This will only work on the first run
# Note: You hereby accept the license! Please see installer for remaining questions.
- name: Accept License and Make Unattended Installation Possible
  lineinfile:
    dest: /home/gpadmin/gpdb{{ gpdb.major_version }}-tmp-install/{{ binary_installer_file }}.bin
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
    state: "{{ item.state }}"
    backrefs: "{{ item.backrefs }}"
  with_items:
    - { regexp: '^more << EOF', line: 'cat << EOF', state: present, backrefs: no }
    - { regexp: '^agreed=', line: 'agreed=1', state: present, backrefs: yes }
    - { regexp: '^pathVerification=', line: 'pathVerification=1', state: present, backrefs: yes }
    - { regexp: '^validMigrateDecision=', line: 'validMigrateDecision=1', state: present, backrefs: yes }
    - { regexp: '^user_specified_installPath=', line: 'user_specified_installPath={{ gpdb.base_dir }}/{{ install_path }}', state: present, backrefs: yes }
    - { regexp: '^installPath=', line: 'installPath={{ gpdb.base_dir }}/{{ install_path }}', state: present, backrefs: yes }
    - { regexp: '^    agreed=', line: '    agreed=1', state: present, backrefs: yes }
  when: ( inventory_hostname in groups['master'] and gpdb_install == True ) and ( gpdb.binary_type != 'rpm' and gpdb.binary_type != 'deb' )


- name: Install Greenplum Database Software Binary in {{ gpdb.base_dir }}
  become_user: gpadmin
  command: /home/gpadmin/gpdb{{ gpdb.major_version }}-tmp-install/{{ binary_installer_file }}.bin
  async: 120
  poll: 5
  when: ( gpdb_install == True and gpdb.binary_type == 'zip' )


- name: Install Greenplum Database Software RPM Package in {{ gpdb.base_dir }}
  package:
    name: /home/gpadmin/{{ binary_installer_file }}.{{ gpdb.binary_type }}
    state: present
    disable_gpg_check: yes
  async: 360
  poll: 5
  when: ( gpdb_install == True and gpdb.binary_type == 'rpm' )


- name: Install Greenplum Database Software DEB Package in {{ gpdb.base_dir }}
  apt:
    deb: /home/gpadmin/{{ binary_installer_file }}.{{ gpdb.binary_type }}
    state: present
  async: 360
  poll: 5
  when: ( gpdb_install == True and gpdb.binary_type == 'deb' )


- name: Create Symlink for Greenplum Database Install Directory
  file:
    src: "{{ gpdb.base_dir }}/{{ install_path }}"
    dest: "{{ gpdb.base_dir }}/{{ gpdb.pkg_name }}"
    owner: gpadmin
    group: gpadmin
    state: link


- name: Remove Temp Installer Directory
  file: path=/home/gpadmin/gpdb{{ gpdb.major_version }}-tmp-install state=absent
  changed_when: False
  when: ( gpdb_install == True and gpdb.binary_type == 'zip' )


- name: Check Again if the Greenplum Database Version is Already Installed
  stat: path={{ gpdb.base_dir }}/{{ install_path }}
  register: gpdb_installed_verify


- name: Stop if Greenplum Database Software is not Installed
  fail: msg="Installing Greenplum Database Software is currently failed!"
  when: gpdb_installed_verify.stat.exists != True

