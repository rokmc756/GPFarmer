#
- name: Add the path of greenplum variable file into .bashrc
  become: true
  become_user: gpadmin
  lineinfile:
    dest: /home/gpadmin/.bashrc
    line: "source /usr/local/greenplum-db/greenplum_path.sh"
    state: present

#
- name: Verify that Greenplum Database is up and running
  become_user: gpadmin
  changed_when: False
  shell: ( . {{ gpdb.base_dir }}/greenplum-db/greenplum_path.sh && psql -c "SELECT VERSION()" )
  args:
    executable: /bin/bash
  register: select_version
  when: inventory_hostname in groups['master']
  failed_when: "'(Greenplum Database ' not in select_version.stdout"

#
- name: Change gpadmin password to check remote login via SSL
  become_user: gpadmin
  changed_when: False
  shell: ( . {{ gpdb.base_dir }}/greenplum-db/greenplum_path.sh && psql -c "alter user gpadmin with password 'changeme'" )
  args:
    executable: /bin/bash
  register: gpadmin_password_changed
  when: inventory_hostname in groups['master']
  failed_when: "'(Greenplum Database ' not in select_version.stdout"

#
#- name: Create hostfile_all file for all nodes
#  lineinfile:
#    path: "/home/gpadmin/hostfile_all"
#    line: "{{ hostvars[item]['ansible_hostname'] }}"
#    state: present
#    owner: gpadmin
#    group: gpadmin
#    mode: '0644'
#    create: yes
#  register: hostfile_all_created
#  with_items:
#    - "{{ groups['master'] }}"
#    - "{{ groups['standby'] }}"
#    - "{{ groups['segments'] }}"
#  when: ( inventory_hostname in groups['master'] and gpdb_install == True ) and ( gpdb_initdb_single == False and gpdb_initdb_with_standby == True )

#
- name: Greenplum Database Installation
  debug: msg="Greenplum Database {{ gpdb.major_version }}.{{ gpdb.minor_version }}{{ gpdb.build_version }} installed"
  when: gpdb_install == True

#
- name: Greenplum Database Version switched
  debug: msg="Greenplum Database {{ gpdb.major_version }}.{{ gpdb.minor_version }}{{ gpdb.build_version }} is active"
  when: gpdb_linkchange == True

# Status: Greenplum Database up and running
