---
#
- name: Verify that Greenplum Database is up and running
  become_user: gpadmin
  changed_when: False
  shell: ( . {{ gpdb.base_dir }}/greenplum-db/greenplum_path.sh && psql -c "SELECT VERSION()" )
  args:
    executable: /bin/bash
  register: select_version
  when: inventory_hostname in groups['master']
  failed_when: "'(Greenplum Database ' not in select_version.stdout"

#
- name: Add IP address of FreeIPA Server
  become: true
  lineinfile:
    dest: /etc/hosts
    line: "{{ freeipa.client_ipaddr }}  {{ freeipa.client_server }}  {{ ( freeipa.client_server | split('.') )[0] }}"
    state: present

#
- name: Install FreeIPA Client Package for Red Hat / CentOS / Rocky Linux
  become: true
  package:
    name: "{{ item }}"
    state: present
  async: 360
  poll: 5
  with_items:
    - ipa-client
    - nss-pam-ldapd
  when: inventory_hostname in groups['master']

#
- name: Enable and start systemd service for nscld daemon
  become: true
  systemd:
    daemon_reload: yes
    enabled: yes
    state: started
    name: nslcd
  register: nslcd_systemd_status
  when: inventory_hostname in groups['master']

#
- name: Install FreeIPA Client
  become: yes
  shell: |
    echo {{ freeipa.admin_passwd }} | kinit {{ freeipa.admin_user }}
    ipa-client-install --domain={{ freeipa.client_domain }} --server={{ freeipa.client_server }} --enable-dns-updates --principal={{ freeipa.admin_user }} --password={{ freeipa.admin_passwd }} --no-ntp -U
  args:
    executable: /bin/bash
  register: freeipa_client_installed
  when: inventory_hostname in groups['master']

#
- name: Add LDAP User into FreeIPA Server for Greenplum Database Authentication
  become: yes
  shell: |
    echo {{ freeipa.admin_passwd }} | kinit -p {{ freeipa.admin_user }}
    echo {{ item.passwd }} | ipa user-add {{ item.username }} --first={{ item.first_name }} --last={{ item.last_name }} --password
    echo {{ item.passwd }} | ipa user-mod {{ item.username }} --password-expiration='2033-10-22 23:50:00Z'
  args:
    executable: /bin/bash
  register: ldap_users_added
  with_items: "{{ freeipa.ldap.users }}"
  when: inventory_hostname in groups['master']

#
- name: Add service for Greenplum Database into FreeIPA Server
  become: yes
  shell: |
    echo {{ freeipa.admin_passwd }} | kinit {{ freeipa.admin_user }}
    ipa service-add postgres/{{ freeipa.client_fqdn }}.{{ freeipa.client_domain }}@{{ freeipa.client_realm }}
  args:
    executable: /bin/bash
  register: gpdb_service_added
  when: inventory_hostname in groups['master']

#
- name: Add ldap configuration file to authenticate ldap user into Greenplum Database
  become_user: gpadmin
  lineinfile:
    dest: "{{ gpdb.master_data_dir }}/{{ item.file }}"
    line: "{{ item.line }}"
    state: "{{ item.state }}"
  with_items:
    - { file: "pg_hba.conf",     line: "host  {{ freeipa.ldap.database }}  all  192.168.0.0/24  ldap  ldapurl=ldap://{{ freeipa.client_server }} ldapprefix=\"uid=\" ldapsuffix=\",{{ freeipa.ldap.cn }},{{ freeipa.ldap.dn }}\"",           state: present }
  register: gpdb_ldap_config
  when: inventory_hostname in groups['master']

#
- name: Create role for LDAP Users
  become_user: gpadmin
  changed_when: False
  shell: ( . {{ gpdb.base_dir }}/greenplum-db/greenplum_path.sh && psql -c "CREATE USER {{ item.username }}" )
  args:
    executable: /bin/bash
  register: ldap_users_added
  with_items: "{{ freeipa.ldap.users }}"
  when: inventory_hostname in groups['master']
  failed_when: "'(Greenplum Database ' not in select_version.stdout"

#
- name: Create database for LDAP Users
  become_user: gpadmin
  changed_when: False
  shell: ( . {{ gpdb.base_dir }}/greenplum-db/greenplum_path.sh && createdb {{ freeipa.ldap.database }} )
  args:
    executable: /bin/bash
  register: ldap_database_created
  when: inventory_hostname in groups['master']
  failed_when: "'(Greenplum Database ' not in select_version.stdout"

#
- name: Restart Greenplum Database to apply changes
  become_user: gpadmin
  changed_when: False
  shell: ( . {{ gpdb.base_dir }}/greenplum-db/greenplum_path.sh && gpstop -ra )
  args:
    executable: /bin/bash
  register: gpdb_restarted
  when: inventory_hostname in groups['master']
  failed_when: "'(Greenplum Database ' not in select_version.stdout"
