---
# Install GPCOPY
#
- name: Check if the Greenplum Database Software is already installed
  stat: path={{ gpdb.base_dir }}/greenplum-db
  register: gpdb_installed

#
- name: Stop if Greenplum Database Software is not installed
  fail: msg="Greenplum Database software is not installed!"
  when:
    - gpdb_installed.stat.exists != True

#
- name: Check if the GPCOPY is already installed
  stat: path={{ gpdb.base_dir }}/greenplum-db/bin/gpcopy
  register: gpcopy_installed

#
- name: Stop if GPCOPY is already installed
  fail: msg="gpcopy is already installed"
  when: gpcopy_installed.stat.exists != False

#
- name: Copy GPCOPY tarball file
  copy: src=gpcopy-{{ gpcopy.major_version }}.{{ gpcopy.minor_version }}.{{ gpcopy.build_version }}.tar.gz dest={{ gpcopy.gpadmin_home_dir }}/gpcopy-{{ gpcopy.major_version }}.{{ gpcopy.minor_version }}.{{ gpcopy.build_version }}.tar.gz mode=0644 owner=gpadmin group=gpadmin
  when: gpcopy_installed.stat.exists != True

#
- name: Unzip GPCOPY archive
  unarchive: src={{ gpcopy.gpadmin_home_dir }}/gpcopy-{{ gpcopy.major_version }}.{{ gpcopy.minor_version }}.{{ gpcopy.build_version }}.tar.gz dest={{ gpdb.gpadmin_home_dir }} remote_src=yes mode=0644 owner=gpadmin group=gpadmin
  when: gpcopy_installed.stat.exists != True

#
- name: Copy GPCOPY binary files
  copy: src={{ gpdb.gpadmin_home_dir }}/gpcopy-{{ gpcopy.major_version }}.{{ gpcopy.minor_version }}.{{ gpcopy.build_version }}/{{ item }} dest={{ gpdb.base_dir }}/greenplum-db/bin/{{ item }} remote_src=yes mode=0755 owner=gpadmin group=gpadminjkj
  with_items:
    - gpcopy
    - gpcopy_helper
  when: gpcopy_installed.stat.exists != True

