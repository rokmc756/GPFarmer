---
# Install DataSciencePython extention on Greenplum database

#
- name: Check if the GPDB software is already installed
  stat: path={{ gpdb_base_dir }}/greenplum-db
  register: gpdb_installed

#
- name: Stop if GPDB software is not installed
  fail: msg="Greenplum Database software is not installed!"
  when: gpdb_installed.stat.exists != True

#
- name: Install dependencies package for DataSciencePython
  become_user: root
  package: name={{ item }} state=present
  with_items:
    - tk
    - tcl
    - sqlite

#
- name: Verify that database is up and running
  become_user: gpadmin
  changed_when: False
  shell: ( . {{ gpdb_base_dir }}/greenplum-db/greenplum_path.sh && psql -c "SELECT VERSION()" )
  args:
    executable: /bin/bash
  register: select_version
  when: inventory_hostname in groups['master']
  failed_when: "'(Greenplum Database ' not in select_version.stdout"

##
- set_fact:
    gppkg_install_cmd: "gppkg -i"
    check_dspython_installed: "gppkg -q --all | grep DataSciencePython | cut -d . -f 1 | sed 's/[0-9]$//g'"
    dspython_package_name: DataSciencePython{{ dspython.prefix_major_version }}{{ dspython.major_version }}.{{ dspython.minor_version }}-{{ dspython.patch_version }}-gp{{ dspython.gpdb_version }}-{{ dspython.os_version }}_{{ dspython.arch_type }}.gppkg
  when: ( ansible_distribution == "RedHat" or ansible_distribution == "CentOS" or ansible_distribution == "Rocky" ) and dspython.gpdb_version|int <= 6

- set_fact:
    gppkg_install_cmd: "gppkg -a install"
    check_dspython_installed: "gppkg query | grep DataSciencePython | awk '{print $1}' | sed 's/[0-9]*//g' | sed 's/.$//g'"
    dspython_package_name: DataSciencePython{{ dspython.prefix_major_version }}{{ dspython.major_version }}.{{ dspython.minor_version }}-{{ dspython.patch_version }}-gp{{ dspython.gpdb_version }}-{{ dspython.os_version }}_{{ dspython.arch_type }}.gppkg
  when: ( ansible_distribution == "RedHat" or ansible_distribution == "CentOS" or ansible_distribution == "Rocky" ) and dspython.gpdb_version|int >= 7

#
- set_fact:
    gppkg_install_cmd: "gppkg -i"
    check_dspython_installed: "gppkg -q --all | grep DataSciencePython | cut -d . -f 1 | sed 's/[0-9]$//g'"
    dspython_package_name: DataSciencePython{{ dspython.prefix_major_version }}{{ dspython.major_version }}.{{ dspython.minor_version }}.{{ dspython.patch_version }}-gp{{ dspython.gpdb_version }}-{{ dspython.os_version }}_{{ dspython.arch_type }}.gppkg
  when: ( ansible_distribution == "Ubuntu" or ansible_distribution == "Debian" ) and dspython.gpdb_version <= 6

#
- set_fact:
    gppkg_install_cmd: "gppkg -a install"
    check_dspython_installed: "gppkg query | grep DataSciencePython | awk '{print $1}' | sed 's/[0-9]*//g' | sed 's/.$//g'"
    dspython_package_name: DataSciencePython{{ dspython.prefix_major_version }}{{ dspython.major_version }}.{{ dspython.minor_version }}-{{ dspython.patch_version }}-gp{{ dspython.gpdb_version }}-{{ dspython.os_version }}_{{ dspython.arch_type }}.gppkg
  when: ( ansible_distribution == "Ubuntu" or ansible_distribution == "Debian" ) and dspython.gpdb_version >= 7

#
- name: Verify if DataSciencePython gppkg is installed
  become_user: gpadmin
  shell: ( source {{ gpdb_base_dir }}/greenplum-db/greenplum_path.sh && {{ check_dspython_installed }} )
  args:
    executable: /bin/bash
  ignore_errors: true
  register: dspython_installed
  changed_when: False
  when: inventory_hostname in groups['master']

#
- debug: msg={{ dspython_installed.stdout }}
  when: inventory_hostname in groups['master']

#
- name: Stop if DataSciencePython gppkg package is installed
  fail: msg="DataSciencePython gppkg package is already installed!"
  when: ( inventory_hostname in groups['master'] and 'DataSciencePython' in dspython_installed.stdout )

#
- name: Copy DataSciencePython gppkg file
  copy: src={{ dspython_package_name }} dest={{ gpadmin_home_dir }} mode=0644 owner=gpadmin group=gpadmin
  when: ( inventory_hostname in groups['master'] and 'DataSciencePython' not in dspython_installed.stdout )

- debug: msg={{ dspython_package_name }}

#
- name: Install DataSciencePython package
  become_user: gpadmin
  shell: ( . {{ gpdb_base_dir }}/greenplum-db/greenplum_path.sh && {{ gppkg_install_cmd }} {{ gpadmin_home_dir }}/{{ dspython_package_name }} )
  args:
    executable: /bin/bash
  register: dspython_package_installed
  ignore_errors: true
  async: 3600
  poll: 10
  when: ( inventory_hostname in groups['master'] and 'DataSciencePython' not in dspython_installed.stdout )

#
- name: Restart GPDB and apply parameters for dspython in greenplum_path.sh
  become_user: gpadmin
  shell: ( . {{ gpdb_base_dir }}/greenplum-db/greenplum_path.sh && gpstop -ra )
  args:
    executable: /bin/bash
  async: 150
  poll: 5
  when: inventory_hostname in groups['master']

#
- name: Verify that database for DataSciencePython is installed
  become_user: gpadmin
  shell: ( . {{ gpdb_base_dir }}/greenplum-db/greenplum_path.sh && psql -tAc "SELECT 100 FROM pg_database WHERE datname='{{ dspython.database_name }}'" )
  args:
    executable: /bin/bash
  register: dspython_database_installed
  when: inventory_hostname in groups['master']

#
- name: Create database for dspython
  become_user: gpadmin
  shell: ( . {{ gpdb_base_dir }}/greenplum-db/greenplum_path.sh && createdb {{ dspython.database_name }} )
  args:
    executable: /bin/bash
  register: dspython_database_created
  when:
    - inventory_hostname in groups['master']
    - "'100' not in dspython_database_installed.stdout"

#- name: The Greenplum Database Python Data Science Modules are installed in the following directory
#  become_user: gpadmin
#  shell: ( . {{ gpdb_base_dir }}/greenplum-db/greenplum_path.sh && ls -al $GPHOME/ext/DataSciencePython/lib/python2.7/site-packages/ )
#  register: dspython_modules_listed
