---
# Install plr extention on Greenplum database

#
- name: Check if the GPDB software is already installed
  stat: path={{ gpdb.base_dir }}/greenplum-db
  register: gpdb_installed

#
- name: Stop if GPDB software is not installed
  fail: msg="Greenplum Database software is not installed!"
  when: gpdb_installed.stat.exists != True

#
- name: Verify that database is up and running
  become_user: gpadmin
  changed_when: False
  shell: ( . {{ gpdb.base_dir }}/greenplum-db/greenplum_path.sh && psql -c "SELECT VERSION()" )
  args:
    executable: /bin/bash
  register: select_version
  when: inventory_hostname in groups['master']
  failed_when: "'(Greenplum Database ' not in select_version.stdout"

#
- set_fact:
    gppkg_install_cmd: "gppkg -i"
    check_plr_installed: "gppkg -q --all | grep plr | cut -d - -f 1"
    plr_package_name: plr-{{ plr_prefix_major_version }}{{ plr_major_version }}.{{ plr_minor_version }}.{{ plr_patch_version }}-gp{{ plr_gpdb_version }}-{{ plr_os_version }}-{{ plr_arch_type }}.gppkg
  when: inventory_hostname in groups['master'] and plr_gpdb_version|int <= 6

#
- set_fact:
    gppkg_install_cmd: "gppkg -a install"
    check_plr_installed: "gppkg query | grep plr | awk '{print $1}'"
    plr_package_name: plr-{{ plr_major_version }}.{{ plr_minor_version }}.{{ plr_patch_version }}-gp{{ plr_gpdb_version }}-{{ plr_os_version }}-{{ plr_arch_type }}.gppkg
  when: inventory_hostname in groups['master'] and plr_gpdb_version|int >= 7

#
- name: Verify if PLR gppkg pakcage is installed
  become_user: gpadmin
  shell: ( source {{ gpdb.base_dir }}/greenplum-db/greenplum_path.sh && {{ check_plr_installed }} )
  args:
    executable: /bin/bash
  ignore_errors: true
  register: plr_installed
  changed_when: False
  when: inventory_hostname in groups['master']

#
- name: Stop if PLR gppkg package is already installed
  fail: msg="PLR gppkg package is already installed!"
  when: ( inventory_hostname in groups['master'] and 'plr' in plr_installed.stdout )

#
- name: Copy PLR gppkg pakcage file
  copy: src={{ plr_package_name }} dest={{ gpdb.admin_home_dir }} mode=0644 owner=gpadmin group=gpadmin
  when: ( inventory_hostname in groups['master'] and 'plr' not in plr_installed.stdout )

#
- name: Install PLR gppkg package
  become_user: gpadmin
  shell: ( source {{ gpdb.base_dir }}/greenplum-db/greenplum_path.sh && {{ gppkg_install_cmd }} {{ gpdb.admin_home_dir }}/{{ plr_package_name }} )
  args:
    executable: /bin/bash
  register: plr_package_installed
  ignore_errors: true
  until: plr_package_installed is succeeded
  retries: 5
  delay: 10
  when: ( inventory_hostname in groups['master'] and 'plr' not in plr_installed.stdout )

# async: 600
# poll: 5

#
- name: Restart GPDB and apply parameters for plr in greenplum_path.sh
  become_user: gpadmin
  shell: ( . {{ gpdb.base_dir }}/greenplum-db/greenplum_path.sh && gpstop -ra )
  args:
    executable: /bin/bash
  async: 60
  poll: 5
  when: inventory_hostname in groups['master']

#
- name: Verify that database for plr is installed
  become_user: gpadmin
  shell: ( . {{ gpdb.base_dir }}/greenplum-db/greenplum_path.sh && psql -tAc "SELECT 100 FROM pg_database WHERE datname='{{ plr_database_name }}'" )
  args:
    executable: /bin/bash
  register: plr_database_installed
  when: inventory_hostname in groups['master']

#
- name: Create database for plr
  become_user: gpadmin
  shell: ( . {{ gpdb.base_dir }}/greenplum-db/greenplum_path.sh && createdb {{ plr_database_name }} )
  args:
    executable: /bin/bash
  register: plr_database_created
  when: ( inventory_hostname in groups['master'] and '100' not in plr_database_installed.stdout )

#
- name: Enabling PL/R Language Support for GPDB 4.x
  become_user: gpadmin
  shell: ( . {{ gpdb.base_dir }}/greenplum-db/greenplum_path.sh && createlang plr -d {{ plr_database_name }} )
  args:
    executable: /bin/bash
  register: plr_language_support_enabled
  when: ( inventory_hostname in groups['master'] and plr_gpdb_version == "4.3" and '100' not in plr_database_installed.stdout )

#
- name: Enabling PL/R Language Support for GPDB 6.x or 7.x
  become_user: gpadmin
  shell: ( . {{ gpdb.base_dir }}/greenplum-db/greenplum_path.sh && psql -d {{ plr_database_name }} -c "CREATE EXTENSION plr;" )
  args:
    executable: /bin/bash
  register: plr_language_support_enabled
  when: ( inventory_hostname in groups['master'] and plr_gpdb_version|regex_replace('[^0-9]','')|int >= 6 and '100' not in plr_database_installed.stdout )
