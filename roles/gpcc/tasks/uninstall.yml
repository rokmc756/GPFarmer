---
# Uninstall Greenplum Command Center on Red Hat / CentOS / Rocky / Ubuntu / Debian
#
#
- name: Verify that Greenplum database is up and running
  become_user: gpadmin
  changed_when: False
  shell: ( . {{ gpdb_base_dir }}/greenplum-db/greenplum_path.sh && psql -c "SELECT VERSION()" )
  register: select_version
  failed_when: "'(Greenplum Database ' not in select_version.stdout"
  when: inventory_hostname in groups['master']

#
- name: Set prefix directory for installation path of Greenplum Command Center
  set_fact: gpcc_prefix_dir=/usr/local/greenplum-cc-web
  when: gpcc_major_version|int <= 6 and gpcc_minor_version|int < 2

#
- name: Set prefix directory for installation path of Greenplum Command Center
  set_fact: gpcc_prefix_dir=/usr/local/greenplum-cc
  when: gpcc_major_version|int >= 6 and gpcc_minor_version|int >= 2

#
- name: Check if the Greenplum Command Center Software is already installed
  stat: path={{ gpcc_prefix_dir }}-{{ gpcc_major_version }}.{{ gpcc_minor_version }}
  register: gpcc_installed

#
- name: Define varaibles for the installation and existance and the package name of gppkg
  set_fact:
    gppkg_remove_cmd: "gppkg -r"
    check_gpmetrics_installed: "gppkg -q --all | grep MetricsCollector | cut -d - -f 1"
    gpmetrics_package_name: MetricsCollector-{{ gpcc_major_version }}.{{ gpcc_minor_version }}_gp_{{ gpdb_metric_major_version }}.{{ gpdb_metric_minor_version }}
  when: inventory_hostname in groups['master'] and gpdb_major_version|int <= 6

#
- name: Define varaibles for the installation and existance and the package name of gppkg
  set_fact:
    gppkg_install_cmd: "gppkg -a remove"
    check_gpmetrics_installed: "gppkg query | grep MetricsCollector | awk '{print $1}'"
    gpmetrics_package_name: MetricsCollector-{{ gpcc_major_version }}.{{ gpcc_minor_version }}_gp_{{ gpdb_metric_major_version }}.{{ gpdb_metric_minor_version }}-{{ gpcc_os_name }}-{{ gpcc_metric_arch }}
  when: inventory_hostname in groups['master'] and gpdb_major_version|int >= 7

#
- name: Fail if Greenplum Command Center Software is not installed
  fail: msg="Greenplum Command Center is not installed!"
  when: gpcc_installed.stat.exists == False

#- debug:
#    msg: "{{ gpcc_running.stdout_lines[1].split(' ').4.split('/').0 }}"
#  when: inventory_hostname in groups['standby']

#
- name: Stop Greenplum Command Center instance for 3 and ealier versions
  become_user: gpadmin
  changed_when: False
  shell: ( . {{ gpdb_base_dir }}/greenplum-db/greenplum_path.sh && . {{ gpcc_prefix_dir }}/gpcc_path.sh && gpcmdr --stop sne )
  when: ( gpcc_major_version <= 6 and gpcc_minor_version < 2 ) and ( inventory_hostname in groups['standby'] and gpcc_installed.stat.exists == True )

#
- name: Verify if MetricsCollector extension pakcage is installed
  become_user: gpadmin
  shell: ( source {{ gpdb_base_dir }}/greenplum-db/greenplum_path.sh && {{ check_gpmetrics_installed }} )
  args:
    executable: /bin/bash
  ignore_errors: true
  register: mc_installed
  changed_when: False
  when: inventory_hostname in groups['master'] and ( gpcc_major_version >= 6 and gpcc_minor_version >= 7 )

#
- name: Stop if MetricsCollector extension package is not installed
  fail: msg="MetricsCollector extension package is not installed!"
  when: ( gpcc_major_version >= 6 and gpcc_minor_version >= 7 ) and ( inventory_hostname in groups['master'] and 'MetricsCollector' not in mc_installed.stdout )


#
- name: Drop MetricsCollector extension
  shell: ( . {{ gpdb_base_dir }}/greenplum-db/greenplum_path.sh && psql -d gpperfmon -c "DROP EXTENSION metrics_collector;" )
  args:
    executable: /bin/bash
  ignore_errors: yes
  register: mc_extension_dropped
  when: ( gpcc_major_version >= 6 and gpcc_minor_version >= 7 ) and ( inventory_hostname in groups['master'] and 'MetricsCollector' in mc_installed.stdout )

# shared_preload_libraries = 'metrics_collector'
# gp_enable_query_metrics = on

#
- name: Unnstall MetricsCollector extension package
  become_user: gpadmin
  shell: ( . {{ gpdb_base_dir }}/greenplum-db/greenplum_path.sh && {{ gppkg_remove_cmd }} {{ gpmetrics_package_name }} )
  when: ( gpcc_major_version >= 6 and gpcc_minor_version >= 7 ) and ( inventory_hostname in groups['master'] and 'MetricsCollector' in mc_installed.stdout )

#
- name: Verify that Greenplum Command Center is up and running
  become_user: gpadmin
  changed_when: False
  shell: ( . {{ gpdb_base_dir }}/greenplum-db/greenplum_path.sh && . {{ gpcc_prefix_dir }}/gpcc_path.sh && gpcc status )
  register: gpcc_running
  when: ( gpcc_major_version >= 6 and gpcc_minor_version >= 2 ) and ( inventory_hostname in groups['standby'] and gpcc_installed.stat.exists == True )

- debug:
    msg: "{{ gpcc_running.stdout_lines[1].split(' ').4.split('/').0 }}"
  when: inventory_hostname in groups['standby']

#
- name: Check if Greenplum Command Center is running
  debug: msg="Greenplum Command Center is not running normally!"
  when: ( gpcc_major_version >= 6 and gpcc_minor_version >= 7 ) and ( inventory_hostname in groups['standby'] and gpcc_installed.stat.exists == True ) and ( gpcc_running.stdout_lines[1].split(' ').4.split('/').0|int < 1 )

#
- name: Stop Command Center instance for and later versions
  become_user: gpadmin
  changed_when: False
  shell: ( . {{ gpdb_base_dir }}/greenplum-db/greenplum_path.sh && . {{ gpcc_prefix_dir }}/gpcc_path.sh && gpcc stop )
  when: ( gpcc_major_version >= 6 and gpcc_minor_version >= 2 ) and ( inventory_hostname in groups['standby'] and gpcc_installed.stat.exists == True ) and ( gpcc_running.stdout_lines[1].split(' ').4.split('/').0|int > 0 )

#
- name: Disable the data colleciton agents
  become_user: gpadmin
  changed_when: False
  shell: ( . {{ gpdb_base_dir }}/greenplum-db/greenplum_path.sh && gpconfig -c gp_enable_gpperfmon -v off )
  register: gpperfmon_disabled
  when: inventory_hostname in groups['master']

#
- name: Disable query metrics
  become_user: gpadmin
  changed_when: False
  shell: ( . {{ gpdb_base_dir }}/greenplum-db/greenplum_path.sh && gpconfig -c gp_enable_query_metrics -v off )
  register: query_metric_disabled
  when: inventory_hostname in groups['master']

#
- name: Remove GUC of MetricsCollector
  become_user: gpadmin
  changed_when: False
  shell: ( . {{ gpdb_base_dir }}/greenplum-db/greenplum_path.sh && gpconfig -c shared_preload_libraries -v '' )
  register: metrics_collector_removed
  when: inventory_hostname in groups['master']

#
- name: Drop superuser roles from postgres database
  become_user: gpadmin
  shell: ( . {{ gpdb_base_dir }}/greenplum-db/greenplum_path.sh && psql -d postgres -c 'DROP {{ item }};' )
  with_items:
    - "function gpcc_schema.pghba_list_version()"
    - "function gpcc_schema.pghba_check_reload(text)"
    - "function gpcc_schema.replace_pghba(text,text,boolean)"
    - "function gpcc_schema.write_pghba(text)"
    - "function gpcc_schema.read_pghba(text)"
    - "table gpcc_schema.pghba_lock"
    - "function gpcc_schema.read_file(text)"
  ignore_errors: yes
  register: gpmon_role_denpendencies_dropped
  when: inventory_hostname in groups['master'] and ( gpcc_major_version|int >= 6 and gpcc_minor_version|int < 7 )

#
- name: Drop the Greenplum Command Center superuser role from the database
  become_user: gpadmin
  shell: ( . {{ gpdb_base_dir }}/greenplum-db/greenplum_path.sh && psql -d template1 -c 'DROP ROLE gpmon;' )
  ignore_errors: yes
  register: gpmon_role_dropped
  when: ( inventory_hostname in groups['master'] and gpmon_role_denpendencies_dropped.rc != 0 )

#
- name: Drop the gpperfmon database if you do not want to keep your historical Greenplum Command Center data
  become_user: gpadmin
  shell: ( . {{ gpdb_base_dir }}/greenplum-db/greenplum_path.sh && dropdb gpperfmon )
  async: 180
  poll: 5
  when: inventory_hostname in groups['master']

#
- name: Clean up any uncommitted Greenplum Command Center data and log files that reside on the master file system
  become_user: gpadmin
  file:
    owner: gpadmin
    group: gpadmin
    path: "{{ master_data_dir }}/gpperfmon/{{ item }}"
    state: absent
  register: gpcc_data_logs_cleaned
  with_items:
    - data
    - logs
  when: inventory_hostname in groups['master'] or inventory_hostname in groups['standby']

#
- name:  Remove out the gpmon entries in pg_hba.conf
  become: yes
  become_user: gpadmin
  lineinfile:
    path: "{{ master_data_dir }}/pg_hba.conf"
    # String to Search
    regexp: "gpmon"
    # State is set to Absent to remove if the Searching Line is found
    state: absent
    backup: yes
  register: gpmon_entries_removed
  when: inventory_hostname in groups['master'] or inventory_hostname in groups['standby']

#
- name: Remove Greenplum Command Center symlink
  file:
    owner: gpadmin
    group: gpadmin
    path:  "{{ gpcc_prefix_dir }}"
    state: absent
  delegate_to: "{{ item }}"
  with_items: "{{ groups['all'] }}"
  when: ( inventory_hostname in groups['master'] and gpcc_installed.stat.exists == True ) and ( gpcc_major_version >= 6 and gpcc_minor_version >= 2 )

#
- name: Remove Greenplum Command Center directories still remained
  file:
    owner: gpadmin
    group: gpadmin
    path: "{{ gpcc_prefix_dir }}-{{ gpcc_major_version }}.{{ gpcc_minor_version }}"
    state: absent
  delegate_to: "{{ item }}"
  with_items: "{{ groups['all'] }}"
  when: ( inventory_hostname in groups['master'] and gpcc_installed.stat.exists == True ) and ( gpcc_major_version >= 6 and gpcc_minor_version >= 2 )

#
- name: Restart Greenplum Database
  become_user: gpadmin
  shell: ( . {{ gpdb_base_dir }}/greenplum-db/greenplum_path.sh && gpstop -ra )
  async: 180
  poll: 5
  register: gpdb_restarted
  when: inventory_hostname in groups['master']

