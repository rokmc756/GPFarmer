---
- name: Get Network Interface name From Prefix of IP Addresses Provided for Greenplum Nodes
  set_fact:
    netdev0: "{{ ansible_interfaces | map('regex_replace', '^', 'ansible_') | map('extract', vars) | selectattr('ipv4', 'defined') | selectattr('ipv4.address', 'match', gpcc.net.ipaddr0 ) | map(attribute='device') | first }}"
    netdev2: "{{ ansible_interfaces | map('regex_replace', '^', 'ansible_') | map('extract', vars) | selectattr('ipv4', 'defined') | selectattr('ipv4.address', 'match', gpcc.net.ipaddr2 ) | map(attribute='device') | first }}"
    # netdev1: "{{ ansible_interfaces | map('regex_replace', '^', 'ansible_') | map('extract', vars) | selectattr('ipv4', 'defined') | selectattr('ipv4.address', 'match', gpcc.net.ipaddr1 ) | map(attribute='device') | first }}"


- name: Get IP Address from Provided Network Device Name
  set_fact:
    ipaddr0: "{{ hostvars[inventory_hostname]['ansible_'~netdev0].ipv4.address }}"
    ipaddr2: "{{ hostvars[inventory_hostname]['ansible_'~netdev2].ipv4.address }}"
    # ipaddr1: "{{ hostvars[inventory_hostname]['ansible_'~netdev1].ipv4.address }}"


- name: Set Default Network Device and Address
  set_fact:
    _netdev: "{{ 'ansible_'~ netdev2 }}"
    _ipaddr: "{{ ipaddr2 }}"


- set_fact:
    gpdb_network_range: "{{ hostvars[inventory_hostname][_netdev]['ipv4']['network'] }}/{{ ( hostvars[inventory_hostname][_netdev]['ipv4']['address'] + '/' + hostvars[inventory_hostname][_netdev]['ipv4']['netmask'] ) | ansible.utils.ipaddr('prefix') }}"


- name: Get the Specific IP Address for All Hosts
  set_fact:
    prod_ip_addr_range: "{{ item }}"
  with_items: "{{ ansible_all_ipv4_addresses }}"
  when: "item | ansible.utils.ipaddr( gpdb_network_range )"


- name: Get the CIDR of GPDB Network
  set_fact:
    gpdb_network_range: "{{ hostvars[inventory_hostname][_netdev]['ipv4']['network'] }}/{{ ( hostvars[inventory_hostname][_netdev]['ipv4']['address'] + '/' + hostvars[inventory_hostname][_netdev]['ipv4']['netmask'] ) | ansible.utils.ipaddr('prefix') }}"


- name: Get the Specific IP Addresses
  set_fact:
    prod_ip_addr_range: "{{ item }}"
  with_items: "{{ ansible_all_ipv4_addresses }}"
  when:
    - ( inventory_hostname in groups['master'] or inventory_hostname in groups['standby'] )
    - "item | ansible.utils.ipaddr( gpdb_network_range )"


- name: Define Varaibles for the Installation and Existance and the GPPKG Package Name
  set_fact:
    gppkg_install_cmd: "gppkg -i"
    gppkg_remove_cmd: "gppkg -r"
    check_gpmetrics_installed: "gppkg -q --all | grep MetricsCollector | cut -d - -f 1"
    gpmetrics_package_name: MetricsCollector-{{ gpcc.major_version }}.{{ gpcc.minor_version }}.{{ gpcc.patch_version }}_gp_{{ gpdb.metric_major_version }}.{{ gpdb.metric_minor_version }}-{{ gpcc.os_name }}-{{ gpcc.metric_arch }}.gppkg
    gpmetrics_package_version: MetricsCollector-{{ gpcc.major_version }}.{{ gpcc.minor_version }}.{{ gpcc.patch_version }}_gp_{{ gpdb.metric_major_version }}.{{ gpdb.metric_minor_version }}
  when:
    - ( inventory_hostname in groups['master'] or inventory_hostname in groups['standby'] )
    - gpdb.major_version|int <= 6


- name: Define Varaibles for the Installation and Existance and the GPPKG Package Name
  set_fact:
    gppkg_install_cmd: "gppkg -a install"
    gppkg_remove_cmd: "gppkg -a remove"
    check_gpmetrics_installed: "gppkg query | grep MetricsCollector | awk '{print $1}'"
    gpmetrics_package_name: MetricsCollector-{{ gpcc.major_version }}.{{ gpcc.minor_version }}.{{ gpcc.patch_version }}_gp_{{ gpdb.metric_major_version }}.{{ gpdb.metric_minor_version }}-{{ gpcc.os_name }}-{{ gpcc.metric_arch }}.gppkg
    gpmetrics_package_version: MetricsCollector-{{ gpcc.major_version }}.{{ gpcc.minor_version }}.{{ gpcc.patch_version }}_gp_{{ gpdb.metric_major_version }}.{{ gpdb.metric_minor_version }}
  when:
    - ( inventory_hostname in groups['master'] or inventory_hostname in groups['standby'] )
    - gpdb.major_version|int >= 7


- name: Set GPCC Base Directory
  set_fact:
    gpcc_base_dir: "{{ gpcc_prefix_dir }}"
  when: ( gpcc.major_version >= 6 and gpcc.minor_version >= 2 )


- name: Set GPCC Base Directory
  set_fact:
    gpcc_base_dir: "{{ gpcc_prefix_dir }}-{{ gpcc.major_version }}.{{ gpcc.minor_version }}"
  when: ( gpcc.major_version >= 6 and gpcc.minor_version >= 2 )


