# Start line to configure NFS access
#
- set_fact:
    java_home: "/usr/lib/jvm/jre-1.8.0"
  when: ( ansible_distribution == "RedHat" or ansible_distribution == "CentOS" or ansible_distribution == "Rocky" )

#
- set_fact:
    java_home: "/usr/lib/jvm/java-8-openjdk-amd64/jre"
  when: ( ansible_distribution == "Ubuntu" or ansible_distribution == "Debian" )

#
- name: Stop the pxf cluster start command to start PXF on each segment host
  become: yes
  become_user: gpadmin
  shell: ( source ~/.bashrc && source {{ gpdb.base_dir }}/greenplum-db/greenplum_path.sh && export JAVA_HOME={{ java_home }} && /usr/local/pxf-{{ pxf.gpdb_version }}/bin/pxf cluster stop )
  args:
    executable: /bin/bash
  register: pxf_cluster_stopped
  when: inventory_hostname in groups['master']

#
- name: Print stopping pxf cluster
  debug: msg={{ pxf_cluster_stopped }}
  when: inventory_hostname in groups['master']

#
- name: Install NFS Client on all hosts for RedHat/CentOS/Rocky
  become: yes
  become_user: root
  package: name={{ item }} state=present
  with_items:
    - nfs-utils
  when:
    - inventory_hostname in groups['master'] or inventory_hostname in groups['standby'] or inventory_hostname in groups['segments']
    - ansible_distribution == "RedHat" or ansible_distribution == "CentOS" or ansible_distribution == "Rocky"
    - nfs.access == true

#
- name: Install NFS Client on all hosts for Ubuntu/Debian
  become: yes
  become_user: root
  package: name={{ item }} state=present
  with_items:
    - nfs-common
    - nfs-client
  when:
    - ansible_distribution == "Debian" or ansible_distribution == "Ubuntu"
    - inventory_hostname in groups['master'] or inventory_hostname in groups['standby'] or inventory_hostname in groups['segments']
    - nfs.access == true

# With NFS
- name: Create PXF base directory for NFS Access and query examples directory on all master and segment hosts
  become_user: gpadmin
  file: path={{ item }} state=directory mode=0755 owner=gpadmin group=gpadmin
  with_items:
    - "{{ nfs.base_work_dir }}"
    - "/home/gpadmin/query-examples"
  when:
    - inventory_hostname in groups['master'] or inventory_hostname in groups['standby'] or inventory_hostname in groups['segments']
    - nfs.access == true

#
- name: Prepare PXF on master for nfs access
  become: yes
  become_user: gpadmin
  shell: ( source ~/.bashrc && source {{ gpdb.base_dir }}/greenplum-db/greenplum_path.sh && export JAVA_HOME={{ java_home }} && PXF_BASE={{ nfs.base_work_dir }} /usr/local/pxf-{{ pxf.gpdb_version }}/bin/pxf cluster prepare )
  args:
    executable: /bin/bash
  register: pxf_cluster_nfs_prepared
  when: nfs.access == true and inventory_hostname in groups['master']

#
- name: Start PXF on master for nfs access
  become: yes
  become_user: gpadmin
  shell: ( source ~/.bashrc && source {{ gpdb.base_dir }}/greenplum-db/greenplum_path.sh && export JAVA_HOME={{ java_home }} && PXF_BASE={{ nfs.base_work_dir }} /usr/local/pxf-{{ pxf.gpdb_version }}/bin/pxf cluster start )
  args:
    executable: /bin/bash
  register: pxf_cluster_nfs_started
  when: nfs.access == true and inventory_hostname in groups['master']

#- name: Synchronize the PXF server configuration to the GPDB cluster
#  become: yes
#  become_user: gpadmin
#  shell: ( source ~/.bashrc && PXF_BASE={{ pxf_base_dir_with_nfs }} pxf cluster sync )
#  register: pxf_cluster_nfs_started
#  when:
#    - inventory_hostname in groups['master']
#    - with_nfs_access == access

#
- name:  Create the $PXF_BASE/servers/nfssrvcfg directory.
  become_user: gpadmin
  file: path={{ nfs.base_work_dir }}/servers/nfssrvcfg state=directory mode=0755 owner=gpadmin group=gpadmin
  when: nfs.access == true and inventory_hostname in groups['master']

#
- name: Copy the PXF pxf-site.xml template file to the nfssrvcfg server configuration directory.
  become_user: gpadmin
  template: src=nfs/pxf-site.xml.j2 dest={{ nfs.base_work_dir }}/servers/nfssrvcfg/pxf-site.xml owner=gpadmin group=gpadmin mode=644 force=yes
  when: nfs.access == true and inventory_hostname in groups['master']

#
- name: Synchronize the PXF server configuration to the GPDB cluster
  become: yes
  become_user: gpadmin
  shell: ( source ~/.bashrc && source {{ gpdb.base_dir }}/greenplum-db/greenplum_path.sh && export JAVA_HOME={{ java_home }} && PXF_BASE={{ nfs.base_work_dir }} /usr/local/pxf-{{ pxf.gpdb_version }}/bin/pxf cluster sync )
  args:
    executable: /bin/bash
  register: pxf_cluster_nfs_started
  when: nfs.access == true and inventory_hostname in groups['master']

#
- name: Mount NFS share directory on all hosts
  become: yes
  become_user: root
  mount:
    path: "{{ nfs.share_dir }}"
    src: "{{ nfs.server_ip_addr }}:{{ nfs.expose_dir }}"
    fstype: nfs
    state: mounted
  when:
    - inventory_hostname in groups['master'] or inventory_hostname in groups['standby'] or inventory_hostname in groups['segments']
    - nfs.access == true

#
- name: Create a relative directoy to the NFS share point
  become: true
  become_user: root
  file: path={{ item }} state=directory mode=0755 owner=gpadmin group=gpadmin
  with_items:
    - "{{ nfs.share_dir }}/ex1"
  when: nfs.access == true and inventory_hostname in groups['master']

#
- name: Copy some data in example directory
  become_user: gpadmin
  template: src=nfs/{{ item }} dest={{ nfs.share_dir }}/ex1/{{ item }} owner=gpadmin group=gpadmin mode=644 force=yes
  with_items:
    - "somedata.csv"
  when: nfs.access == true and inventory_hostname in groups['master']

#
- name: Copy the query examples
  become_user: gpadmin
  template: src=nfs/{{ item }} dest=/home/gpadmin/query-examples/{{ item }} owner=gpadmin group=gpadmin mode=644 force=yes
  with_items:
    - "create-external-table-for-read-nfs.sql"
    - "select_pxf_read_nfs.sql"
    - "create-external-table-for-write-nfs.sql"
    - "insert-data-into-pxf-write-nfs.sql"
  when: nfs.access == true and inventory_hostname in groups['master']

#
- name: Run query examples for nfs access
  become_user: gpadmin
  shell: ( . {{ gpdb.base_dir }}/greenplum-db/greenplum_path.sh && psql -tAc -d {{ pxf.database_name }} -f /home/gpadmin/query-examples/{{ item }} )
  args:
    executable: /bin/bash
  register: run_query_examples_output
  with_items:
    - "create-external-table-for-read-nfs.sql"
    - "select_pxf_read_nfs.sql"
    - "create-external-table-for-write-nfs.sql"
    - "insert-data-into-pxf-write-nfs.sql"
  when: nfs.access == true and inventory_hostname in groups['master']

#
- name: Print the output of running query examples
  debug: msg={{ run_query_examples_output }}
  when: nfs.access == true and inventory_hostname in groups['master']

#
- name: Start PXF on master for nfs access
  become: yes
  become_user: gpadmin
  shell: ( source ~/.bashrc && source {{ gpdb.base_dir }}/greenplum-db/greenplum_path.sh && export JAVA_HOME={{ java_home }} && PXF_BASE={{ nfs.base_work_dir }} /usr/local/pxf-{{ pxf.gpdb_version }}/bin/pxf cluster start )
  args:
    executable: /bin/bash
  register: pxf_cluster_nfs_started
  when: nfs.access == true and inventory_hostname in groups['master']

