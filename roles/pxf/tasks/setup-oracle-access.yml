# Start line to configure Oracle Access

#
- set_fact:
    java_home: "/usr/lib/jvm/jre-1.8.0"
  when: ( ansible_distribution == "RedHat" or ansible_distribution == "CentOS" or ansible_distribution == "Rocky" )

#
- set_fact:
    java_home: "/usr/lib/jvm/java-8-openjdk-amd64/jre"
  when: ( ansible_distribution == "Ubuntu" or ansible_distribution == "Debian" )

#
- name: Stop the pxf cluster start command to start PXF on each segment host
  become: yes
  become_user: gpadmin
  args:
    executable: /bin/bash
  shell: ( source ~/.bashrc && source /usr/local/greenplum-db/greenplum_path.sh && export JAVA_HOME={{ java_home }} && /usr/local/pxf-{{ pxf_gpdb_version }}/bin/pxf cluster stop )

  register: pxf_cluster_stopped
  ignore_errors: yes
  when: inventory_hostname in groups['master']

#
- debug: msg={{ pxf_cluster_stopped }}
  when: inventory_hostname in groups['master']

#
- name: Killall java process for PXF Server
  become: yes
  become_user: gpadmin
  shell: ( source /usr/local/greenplum-db/greenplum_path.sh && gpssh -f /home/gpadmin/hostfile -e 'killall java' )
  args:
    executable: /bin/bash
  ignore_errors: yes
  register: pxf_java_processes_killed
  when:
    - with_oracle_access
    - inventory_hostname in groups['master']

#
- debug: msg={{  pxf_java_processes_killed }}
  when: inventory_hostname in groups['master']

#
- name: Create PXF base directory for Oracle Access and query examples directory on all master and segment hosts
  become_user: gpadmin
  file: path={{ item }} state=directory mode=0755 owner=gpadmin group=gpadmin
  register: pxf_base_dir_created
  with_items:  "{{ pxf_base_dir_with_oracle }}"
  when:
    - with_oracle_access
    - inventory_hostname in groups['master']

#
- debug: msg={{ pxf_base_dir_created }}
  when: inventory_hostname in groups['master']

#
- name: Prepare PXF on master for Oracle Access
  become: yes
  become_user: gpadmin
  shell: ( source ~/.bashrc && source /usr/local/greenplum-db/greenplum_path.sh && export JAVA_HOME={{ java_home }} && PXF_BASE={{ pxf_base_dir_with_oracle }} /usr/local/pxf-{{ pxf_gpdb_version }}/bin/pxf cluster prepare )
  args:
    executable: /bin/bash
  register: pxf_cluster_oracle_prepared
  when:
    - with_oracle_access
    - inventory_hostname in groups['master']

#
- debug: msg={{ pxf_cluster_oracle_prepared }}
  when: inventory_hostname in groups['master']

#
- name: Copy Oracle OJDBC Driver to PXF_BASE/lib
  copy: src=oracle/ojdbc8.jar dest={{ pxf_base_dir_with_oracle }}/lib/ojdbc8.jar owner=gpadmin group=gpadmin mode=0644
  register: ojdbc_copied
  when: inventory_hostname in groups['master']

#
- debug: msg={{ ojdbc_copied }}
  when: inventory_hostname in groups['master']

#
- name: Copy the jdbc-site.xml file to the default configuration directory.
  become_user: gpadmin
  template: src=oracle/jdbc-site.xml.j2 dest={{ pxf_base_dir_with_oracle}}/servers/default/jdbc-site.xml owner=gpadmin group=gpadmin mode=644 force=yes
  register: jdbc_site_copied
  when:
    - with_oracle_access
    - inventory_hostname in groups['master']

#
- debug: msg={{ jdbc_site_copied }}
  when: inventory_hostname in groups['master']

#
- name: Copy the query files to the base directory
  become_user: gpadmin
  template: src=oracle/{{ item }} dest={{ pxf_base_dir_with_oracle}}/{{ item }} owner=gpadmin group=gpadmin mode=644 force=yes
  register: query_files_copied
  with_items:
    - "create-external-table.sql"
    - "create-writable-external-table.sql"
  when:
    - with_oracle_access
    - inventory_hostname in groups['master']

#
- debug: msg={{ query_files_copied }}
  when: inventory_hostname in groups['master']

#
- name: Synchronize the PXF server configuration to the GPDB cluster
  become: yes
  become_user: gpadmin
  shell: ( source ~/.bashrc && source /usr/local/greenplum-db/greenplum_path.sh && export JAVA_HOME={{ java_home }} && PXF_BASE={{ pxf_base_dir_with_oracle }} /usr/local/pxf-{{ pxf_gpdb_version }}/bin/pxf cluster sync )
  args:
    executable: /bin/bash
  register: pxf_cluster_oracle__synced
  when:
    - with_oracle_access
    - inventory_hostname in groups['master']

#
- debug: msg={{ pxf_cluster_oracle__synced }}
  when: inventory_hostname in groups['master']

#
- name: Start PXF on master for Oracle Access
  become_user: gpadmin
  shell: ( source ~/.bashrc && source /usr/local/greenplum-db/greenplum_path.sh && export JAVA_HOME={{ java_home }} && PXF_BASE={{ pxf_base_dir_with_oracle }} /usr/local/pxf-{{ pxf_gpdb_version }}/bin/pxf cluster start )
  args:
    executable: /bin/bash
  register: pxf_cluster_oracle_started
  when:
    - with_oracle_access
    - inventory_hostname in groups['master']

#
- debug: msg={{ pxf_cluster_oracle_started }}
  when: inventory_hostname in groups['master']

#
- name: Create External Table for Oracle
  become_user: gpadmin
  shell: ( . {{ gpdb_base_dir }}/greenplum-db/greenplum_path.sh && psql -d {{ pxf_database_name }} -f {{ pxf_base_dir_with_oracle }}/create-external-table.sql )
  args:
    executable: /bin/bash
  register: oracle_external_table_created
  when:
    - inventory_hostname in groups['master']
#
- debug: msg={{ oracle_external_table_created }}
  when: inventory_hostname in groups['master']

#
- name: Create Writable External Table for Oracle
  become_user: gpadmin
  shell: ( . {{ gpdb_base_dir }}/greenplum-db/greenplum_path.sh && psql -d {{ pxf_database_name }} -f {{ pxf_base_dir_with_oracle }}/create-writable-external-table.sql )
  args:
    executable: /bin/bash
  register: oracle_writable_external_table_created
  when:
    - inventory_hostname in groups['master']

#
- debug: msg={{ oracle_writable_external_table_created }}
  when: inventory_hostname in groups['master']

#
- name: Select data from Oracle Database
  become_user: gpadmin
  shell: ( . {{ gpdb_base_dir }}/greenplum-db/greenplum_path.sh && psql -d {{ pxf_database_name }} -c 'select * from countries' )
  args:
    executable: /bin/bash
  register: oracle_data_selected
  when:
    - inventory_hostname in groups['master']

#
- name: Print select data from Oracle Database
  debug: msg={{ oracle_data_selected }}
  when:
    - inventory_hostname in groups['master']
