---
#
- set_fact:
    java_home: "/usr/lib/jvm/jre-1.8.0"
  when: ( ansible_distribution == "RedHat" or ansible_distribution == "CentOS" or ansible_distribution == "Rocky" )

#
- set_fact:
    java_home: "/usr/lib/jvm/java-8-openjdk-amd64/jre"
  when: ( ansible_distribution == "Ubuntu" or ansible_distribution == "Debian" )

#
- name: Check if the PXF Cluster is runnong on each segment host for MinIO
  become_user: "{{ gpdb.admin_user }}"
  shell: ( source ~/.bashrc && PXF_BASE={{ minio.base_work_dir }} pxf cluster status )
  ignore_errors: yes
  register: pxf_running_checked_minio
  when: minio.access == true and inventory_hostname in groups['master']

#
- debug: msg={{ pxf_running_checked_minio }}

#
- name: Stop pxf cluster runnong on each segment host for MinIO
  become_user: "{{ gpdb.admin_user }}"
  shell: ( source ~/.bashrc && export PXF_BASE={{ minio.base_work_dir }} && pxf cluster stop )
  ignore_errors: yes
  when:
    - inventory_hostname in groups['master'] and 'PXF is running on' in pxf_running_checked_minio.stdout
    - minio.access == true

#
- name: Delete PXF Base directory and query examples directory for MinIO
  become: yes
  become_user: root
  file:
    path: "{{ item }}"
    state: absent
  with_items:
    - "{{ minio.base_work_dir }}"
  when:
    - inventory_hostname in groups['master'] or inventory_hostname in groups['standby'] or inventory_hostname in groups['segments']
    - minio.access == true

# It works
- name: Delete Unauthorized SSL Key
  become: true
  become_user: root
  shell: |
    keytool -delete  -alias {{ hostvars[groups['s3_storage'][0]]['ansible_hostname'] }} -keystore {{ java_home }}/lib/security/cacerts -storepass changeme
    rm -f /etc/pki/ca-trust/source/anchors/{{ hostvars[groups['s3_storage'][0]]['ansible_hostname'] }}.jtest.pivotal.io.crt
    update-ca-trust
  args:
    executable: /bin/bash
  register: ssl_key_deleted
  when: minio.access == true
  #  - inventory_hostname in groups['master'] or inventory_hostname in groups['standby'] or inventory_hostname in groups['segments']
